# source: https://api.hyrecar.com
# timestamp: Sat Aug 11 2018 19:16:16 GMT-0700 (PDT)

type Accident implements Node {
  factOfLoss(where: FactOfLossWhereInput): FactOfLoss
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  claim(where: ClaimWhereInput): Claim
  approvedAmount: Float
  deductible: Float!
  claimAmount: Float
  damageLocation: [DamageLocation!]
  location(where: LocationWhereInput): Location
  tncClaim: Boolean!
  tncUsageDetails(where: TncUsageDetailsWhereInput): TncUsageDetails
}

input AccidentWhereInput {
  """Logical AND on all given filters."""
  AND: [AccidentWhereInput!]

  """Logical OR on all given filters."""
  OR: [AccidentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AccidentWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  approvedAmount: Float

  """All values that are not equal to given value."""
  approvedAmount_not: Float

  """All values that are contained in given list."""
  approvedAmount_in: [Float!]

  """All values that are not contained in given list."""
  approvedAmount_not_in: [Float!]

  """All values less than the given value."""
  approvedAmount_lt: Float

  """All values less than or equal the given value."""
  approvedAmount_lte: Float

  """All values greater than the given value."""
  approvedAmount_gt: Float

  """All values greater than or equal the given value."""
  approvedAmount_gte: Float
  deductible: Float

  """All values that are not equal to given value."""
  deductible_not: Float

  """All values that are contained in given list."""
  deductible_in: [Float!]

  """All values that are not contained in given list."""
  deductible_not_in: [Float!]

  """All values less than the given value."""
  deductible_lt: Float

  """All values less than or equal the given value."""
  deductible_lte: Float

  """All values greater than the given value."""
  deductible_gt: Float

  """All values greater than or equal the given value."""
  deductible_gte: Float
  claimAmount: Float

  """All values that are not equal to given value."""
  claimAmount_not: Float

  """All values that are contained in given list."""
  claimAmount_in: [Float!]

  """All values that are not contained in given list."""
  claimAmount_not_in: [Float!]

  """All values less than the given value."""
  claimAmount_lt: Float

  """All values less than or equal the given value."""
  claimAmount_lte: Float

  """All values greater than the given value."""
  claimAmount_gt: Float

  """All values greater than or equal the given value."""
  claimAmount_gte: Float
  tncClaim: Boolean

  """All values that are not equal to given value."""
  tncClaim_not: Boolean
  factOfLoss: FactOfLossWhereInput
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
  claim: ClaimWhereInput
  location: LocationWhereInput
  tncUsageDetails: TncUsageDetailsWhereInput
}

input AddCarPhotoInput {
  carId: ID!
  file: Upload!
  isPrimary: Boolean
}

type AddRemoveCarPhotoPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  carPhoto: CarPhoto
}

type Admin implements Node {
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  userId: ID!
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  permissions: [AdminPermissions!]
  submittedClaims(where: ClaimWhereInput, orderBy: ClaimOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Claim!]
  assignedClaims(where: ClaimWhereInput, orderBy: ClaimOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Claim!]
  user: User
}

type AdminNote implements Node {
  createdAt: DateTime!
  id: ID!
  note: String!
  dueDate: DateTime
  updatedAt: DateTime!
  admin(where: AdminWhereInput): Admin!
  driverId: ID
  ownerId: ID
  carId: ID
  rentalId: ID
  backgroundCheckId: ID
  insuranceId: ID
  factOfLoss(where: FactOfLossWhereInput): FactOfLoss
  involvedParty(where: InvolvedPartyWhereInput): InvolvedParty
  evidence(where: EvidenceWhereInput): Evidence
  accident(where: AccidentWhereInput): Accident
  claim(where: ClaimWhereInput): Claim
  incidental(where: IncidentalWhereInput): Incidental
  claimStatementId: ID
  claimInvoiceId: ID
  metaDate: DateTime
  meta: Json
  rental: Rental
  owner: Owner
}

"""A connection to a list of items."""
type AdminNoteConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AdminNoteEdge]!
  aggregate: AggregateAdminNote!
}

"""An edge in a connection."""
type AdminNoteEdge {
  """The item at the end of the edge."""
  node: AdminNote!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AdminNoteOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  note_ASC
  note_DESC
  dueDate_ASC
  dueDate_DESC
  updatedAt_ASC
  updatedAt_DESC
  driverId_ASC
  driverId_DESC
  ownerId_ASC
  ownerId_DESC
  carId_ASC
  carId_DESC
  rentalId_ASC
  rentalId_DESC
  backgroundCheckId_ASC
  backgroundCheckId_DESC
  insuranceId_ASC
  insuranceId_DESC
  claimStatementId_ASC
  claimStatementId_DESC
  claimInvoiceId_ASC
  claimInvoiceId_DESC
  metaDate_ASC
  metaDate_DESC
  meta_ASC
  meta_DESC
}

input AdminNoteWhereInput {
  """Logical AND on all given filters."""
  AND: [AdminNoteWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdminNoteWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdminNoteWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  note: String

  """All values that are not equal to given value."""
  note_not: String

  """All values that are contained in given list."""
  note_in: [String!]

  """All values that are not contained in given list."""
  note_not_in: [String!]

  """All values less than the given value."""
  note_lt: String

  """All values less than or equal the given value."""
  note_lte: String

  """All values greater than the given value."""
  note_gt: String

  """All values greater than or equal the given value."""
  note_gte: String

  """All values containing the given string."""
  note_contains: String

  """All values not containing the given string."""
  note_not_contains: String

  """All values starting with the given string."""
  note_starts_with: String

  """All values not starting with the given string."""
  note_not_starts_with: String

  """All values ending with the given string."""
  note_ends_with: String

  """All values not ending with the given string."""
  note_not_ends_with: String
  dueDate: DateTime

  """All values that are not equal to given value."""
  dueDate_not: DateTime

  """All values that are contained in given list."""
  dueDate_in: [DateTime!]

  """All values that are not contained in given list."""
  dueDate_not_in: [DateTime!]

  """All values less than the given value."""
  dueDate_lt: DateTime

  """All values less than or equal the given value."""
  dueDate_lte: DateTime

  """All values greater than the given value."""
  dueDate_gt: DateTime

  """All values greater than or equal the given value."""
  dueDate_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  driverId: ID

  """All values that are not equal to given value."""
  driverId_not: ID

  """All values that are contained in given list."""
  driverId_in: [ID!]

  """All values that are not contained in given list."""
  driverId_not_in: [ID!]

  """All values less than the given value."""
  driverId_lt: ID

  """All values less than or equal the given value."""
  driverId_lte: ID

  """All values greater than the given value."""
  driverId_gt: ID

  """All values greater than or equal the given value."""
  driverId_gte: ID

  """All values containing the given string."""
  driverId_contains: ID

  """All values not containing the given string."""
  driverId_not_contains: ID

  """All values starting with the given string."""
  driverId_starts_with: ID

  """All values not starting with the given string."""
  driverId_not_starts_with: ID

  """All values ending with the given string."""
  driverId_ends_with: ID

  """All values not ending with the given string."""
  driverId_not_ends_with: ID
  ownerId: ID

  """All values that are not equal to given value."""
  ownerId_not: ID

  """All values that are contained in given list."""
  ownerId_in: [ID!]

  """All values that are not contained in given list."""
  ownerId_not_in: [ID!]

  """All values less than the given value."""
  ownerId_lt: ID

  """All values less than or equal the given value."""
  ownerId_lte: ID

  """All values greater than the given value."""
  ownerId_gt: ID

  """All values greater than or equal the given value."""
  ownerId_gte: ID

  """All values containing the given string."""
  ownerId_contains: ID

  """All values not containing the given string."""
  ownerId_not_contains: ID

  """All values starting with the given string."""
  ownerId_starts_with: ID

  """All values not starting with the given string."""
  ownerId_not_starts_with: ID

  """All values ending with the given string."""
  ownerId_ends_with: ID

  """All values not ending with the given string."""
  ownerId_not_ends_with: ID
  carId: ID

  """All values that are not equal to given value."""
  carId_not: ID

  """All values that are contained in given list."""
  carId_in: [ID!]

  """All values that are not contained in given list."""
  carId_not_in: [ID!]

  """All values less than the given value."""
  carId_lt: ID

  """All values less than or equal the given value."""
  carId_lte: ID

  """All values greater than the given value."""
  carId_gt: ID

  """All values greater than or equal the given value."""
  carId_gte: ID

  """All values containing the given string."""
  carId_contains: ID

  """All values not containing the given string."""
  carId_not_contains: ID

  """All values starting with the given string."""
  carId_starts_with: ID

  """All values not starting with the given string."""
  carId_not_starts_with: ID

  """All values ending with the given string."""
  carId_ends_with: ID

  """All values not ending with the given string."""
  carId_not_ends_with: ID
  rentalId: ID

  """All values that are not equal to given value."""
  rentalId_not: ID

  """All values that are contained in given list."""
  rentalId_in: [ID!]

  """All values that are not contained in given list."""
  rentalId_not_in: [ID!]

  """All values less than the given value."""
  rentalId_lt: ID

  """All values less than or equal the given value."""
  rentalId_lte: ID

  """All values greater than the given value."""
  rentalId_gt: ID

  """All values greater than or equal the given value."""
  rentalId_gte: ID

  """All values containing the given string."""
  rentalId_contains: ID

  """All values not containing the given string."""
  rentalId_not_contains: ID

  """All values starting with the given string."""
  rentalId_starts_with: ID

  """All values not starting with the given string."""
  rentalId_not_starts_with: ID

  """All values ending with the given string."""
  rentalId_ends_with: ID

  """All values not ending with the given string."""
  rentalId_not_ends_with: ID
  backgroundCheckId: ID

  """All values that are not equal to given value."""
  backgroundCheckId_not: ID

  """All values that are contained in given list."""
  backgroundCheckId_in: [ID!]

  """All values that are not contained in given list."""
  backgroundCheckId_not_in: [ID!]

  """All values less than the given value."""
  backgroundCheckId_lt: ID

  """All values less than or equal the given value."""
  backgroundCheckId_lte: ID

  """All values greater than the given value."""
  backgroundCheckId_gt: ID

  """All values greater than or equal the given value."""
  backgroundCheckId_gte: ID

  """All values containing the given string."""
  backgroundCheckId_contains: ID

  """All values not containing the given string."""
  backgroundCheckId_not_contains: ID

  """All values starting with the given string."""
  backgroundCheckId_starts_with: ID

  """All values not starting with the given string."""
  backgroundCheckId_not_starts_with: ID

  """All values ending with the given string."""
  backgroundCheckId_ends_with: ID

  """All values not ending with the given string."""
  backgroundCheckId_not_ends_with: ID
  insuranceId: ID

  """All values that are not equal to given value."""
  insuranceId_not: ID

  """All values that are contained in given list."""
  insuranceId_in: [ID!]

  """All values that are not contained in given list."""
  insuranceId_not_in: [ID!]

  """All values less than the given value."""
  insuranceId_lt: ID

  """All values less than or equal the given value."""
  insuranceId_lte: ID

  """All values greater than the given value."""
  insuranceId_gt: ID

  """All values greater than or equal the given value."""
  insuranceId_gte: ID

  """All values containing the given string."""
  insuranceId_contains: ID

  """All values not containing the given string."""
  insuranceId_not_contains: ID

  """All values starting with the given string."""
  insuranceId_starts_with: ID

  """All values not starting with the given string."""
  insuranceId_not_starts_with: ID

  """All values ending with the given string."""
  insuranceId_ends_with: ID

  """All values not ending with the given string."""
  insuranceId_not_ends_with: ID
  claimStatementId: ID

  """All values that are not equal to given value."""
  claimStatementId_not: ID

  """All values that are contained in given list."""
  claimStatementId_in: [ID!]

  """All values that are not contained in given list."""
  claimStatementId_not_in: [ID!]

  """All values less than the given value."""
  claimStatementId_lt: ID

  """All values less than or equal the given value."""
  claimStatementId_lte: ID

  """All values greater than the given value."""
  claimStatementId_gt: ID

  """All values greater than or equal the given value."""
  claimStatementId_gte: ID

  """All values containing the given string."""
  claimStatementId_contains: ID

  """All values not containing the given string."""
  claimStatementId_not_contains: ID

  """All values starting with the given string."""
  claimStatementId_starts_with: ID

  """All values not starting with the given string."""
  claimStatementId_not_starts_with: ID

  """All values ending with the given string."""
  claimStatementId_ends_with: ID

  """All values not ending with the given string."""
  claimStatementId_not_ends_with: ID
  claimInvoiceId: ID

  """All values that are not equal to given value."""
  claimInvoiceId_not: ID

  """All values that are contained in given list."""
  claimInvoiceId_in: [ID!]

  """All values that are not contained in given list."""
  claimInvoiceId_not_in: [ID!]

  """All values less than the given value."""
  claimInvoiceId_lt: ID

  """All values less than or equal the given value."""
  claimInvoiceId_lte: ID

  """All values greater than the given value."""
  claimInvoiceId_gt: ID

  """All values greater than or equal the given value."""
  claimInvoiceId_gte: ID

  """All values containing the given string."""
  claimInvoiceId_contains: ID

  """All values not containing the given string."""
  claimInvoiceId_not_contains: ID

  """All values starting with the given string."""
  claimInvoiceId_starts_with: ID

  """All values not starting with the given string."""
  claimInvoiceId_not_starts_with: ID

  """All values ending with the given string."""
  claimInvoiceId_ends_with: ID

  """All values not ending with the given string."""
  claimInvoiceId_not_ends_with: ID
  metaDate: DateTime

  """All values that are not equal to given value."""
  metaDate_not: DateTime

  """All values that are contained in given list."""
  metaDate_in: [DateTime!]

  """All values that are not contained in given list."""
  metaDate_not_in: [DateTime!]

  """All values less than the given value."""
  metaDate_lt: DateTime

  """All values less than or equal the given value."""
  metaDate_lte: DateTime

  """All values greater than the given value."""
  metaDate_gt: DateTime

  """All values greater than or equal the given value."""
  metaDate_gte: DateTime
  admin: AdminWhereInput
  factOfLoss: FactOfLossWhereInput
  involvedParty: InvolvedPartyWhereInput
  evidence: EvidenceWhereInput
  accident: AccidentWhereInput
  claim: ClaimWhereInput
  incidental: IncidentalWhereInput
}

enum AdminPermissions {
  CLAIMS
  TIER1
  TIER2
  SALES
  COLLECTIONS
  DRIVER_VERIFICATION
  LATE_RENTAL
  DRIVER_SALES
  SALES_MANAGER
  OWNER_SALES
  OPS_MANAGER
  ADMIN
}

input AdminWhereInput {
  """Logical AND on all given filters."""
  AND: [AdminWhereInput!]

  """Logical OR on all given filters."""
  OR: [AdminWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AdminWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  userId: ID

  """All values that are not equal to given value."""
  userId_not: ID

  """All values that are contained in given list."""
  userId_in: [ID!]

  """All values that are not contained in given list."""
  userId_not_in: [ID!]

  """All values less than the given value."""
  userId_lt: ID

  """All values less than or equal the given value."""
  userId_lte: ID

  """All values greater than the given value."""
  userId_gt: ID

  """All values greater than or equal the given value."""
  userId_gte: ID

  """All values containing the given string."""
  userId_contains: ID

  """All values not containing the given string."""
  userId_not_contains: ID

  """All values starting with the given string."""
  userId_starts_with: ID

  """All values not starting with the given string."""
  userId_not_starts_with: ID

  """All values ending with the given string."""
  userId_ends_with: ID

  """All values not ending with the given string."""
  userId_not_ends_with: ID
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
  submittedClaims_every: ClaimWhereInput
  submittedClaims_some: ClaimWhereInput
  submittedClaims_none: ClaimWhereInput
  assignedClaims_every: ClaimWhereInput
  assignedClaims_some: ClaimWhereInput
  assignedClaims_none: ClaimWhereInput
}

type AggregateAdminNote {
  count: Int!
}

type AggregateCar {
  count: Int!
}

type AggregateClaim {
  count: Int!
}

type AggregateInsurance {
  count: Int!
}

type AggregateRating {
  count: Int!
}

type AggregateRental {
  count: Int!
}

input ApproveRejectBookingInput {
  rentalId: ID!
}

type ApproveRejectBookingPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rental: Rental
}

type Auth0Details {
  id: ID!
  name: String
  nickname: String
  picture: String
  email: String
  email_verified: Boolean
  given_name: String
  family_name: String
  user_metadata: Json
  app_metadata: Json
  username: String
  phone_number: String
  phone_verified: String
  created_at: DateTime
  updated_at: DateTime
  identities: Json
  multifactor: Json
  last_ip: String
  last_login: DateTime
  logins_count: Int
  blocked: Boolean
}

type BackgroundCheck {
  driver: Driver
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  verificationStatus: DriverVerificationStatusEnum
  verifiedAt: DateTime
  paymentId: String
  checkrCandidateId: String
  licensePhoto: String @deprecated
  missingInfo: BackgroundCheckMissingInfo
  checkrStatus: CheckrStatusEnum
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminNoteConnection
}

type BackgroundCheckMissingInfo implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  backgroundCheck(where: BackgroundCheckWhereInput): BackgroundCheck!
  profilePicture: Boolean
  driverLicense: Boolean
  olderDriverLicense: Boolean
  address: Boolean
  criminalReport: Boolean
  mvr: Boolean
}

input BackgroundCheckMissingInfoWhereInput {
  """Logical AND on all given filters."""
  AND: [BackgroundCheckMissingInfoWhereInput!]

  """Logical OR on all given filters."""
  OR: [BackgroundCheckMissingInfoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BackgroundCheckMissingInfoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  profilePicture: Boolean

  """All values that are not equal to given value."""
  profilePicture_not: Boolean
  driverLicense: Boolean

  """All values that are not equal to given value."""
  driverLicense_not: Boolean
  olderDriverLicense: Boolean

  """All values that are not equal to given value."""
  olderDriverLicense_not: Boolean
  address: Boolean

  """All values that are not equal to given value."""
  address_not: Boolean
  criminalReport: Boolean

  """All values that are not equal to given value."""
  criminalReport_not: Boolean
  mvr: Boolean

  """All values that are not equal to given value."""
  mvr_not: Boolean
  backgroundCheck: BackgroundCheckWhereInput
}

type BackgroundCheckPayment implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  chargeId: String
  coupon(where: CouponWhereInput): Coupon
  paymentAccount(where: PaymentAccountWhereInput): PaymentAccount
}

enum BackgroundCheckPaymentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  chargeId_ASC
  chargeId_DESC
}

input BackgroundCheckPaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [BackgroundCheckPaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [BackgroundCheckPaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BackgroundCheckPaymentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  chargeId: String

  """All values that are not equal to given value."""
  chargeId_not: String

  """All values that are contained in given list."""
  chargeId_in: [String!]

  """All values that are not contained in given list."""
  chargeId_not_in: [String!]

  """All values less than the given value."""
  chargeId_lt: String

  """All values less than or equal the given value."""
  chargeId_lte: String

  """All values greater than the given value."""
  chargeId_gt: String

  """All values greater than or equal the given value."""
  chargeId_gte: String

  """All values containing the given string."""
  chargeId_contains: String

  """All values not containing the given string."""
  chargeId_not_contains: String

  """All values starting with the given string."""
  chargeId_starts_with: String

  """All values not starting with the given string."""
  chargeId_not_starts_with: String

  """All values ending with the given string."""
  chargeId_ends_with: String

  """All values not ending with the given string."""
  chargeId_not_ends_with: String
  coupon: CouponWhereInput
  paymentAccount: PaymentAccountWhereInput
}

input BackgroundCheckWhereInput {
  """Logical AND on all given filters."""
  AND: [BackgroundCheckWhereInput!]

  """Logical OR on all given filters."""
  OR: [BackgroundCheckWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [BackgroundCheckWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  verificationStatus: DriverVerificationStatusEnum

  """All values that are not equal to given value."""
  verificationStatus_not: DriverVerificationStatusEnum

  """All values that are contained in given list."""
  verificationStatus_in: [DriverVerificationStatusEnum!]

  """All values that are not contained in given list."""
  verificationStatus_not_in: [DriverVerificationStatusEnum!]
  verifiedAt: DateTime

  """All values that are not equal to given value."""
  verifiedAt_not: DateTime

  """All values that are contained in given list."""
  verifiedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  verifiedAt_not_in: [DateTime!]

  """All values less than the given value."""
  verifiedAt_lt: DateTime

  """All values less than or equal the given value."""
  verifiedAt_lte: DateTime

  """All values greater than the given value."""
  verifiedAt_gt: DateTime

  """All values greater than or equal the given value."""
  verifiedAt_gte: DateTime
  paymentId: String

  """All values that are not equal to given value."""
  paymentId_not: String

  """All values that are contained in given list."""
  paymentId_in: [String!]

  """All values that are not contained in given list."""
  paymentId_not_in: [String!]

  """All values less than the given value."""
  paymentId_lt: String

  """All values less than or equal the given value."""
  paymentId_lte: String

  """All values greater than the given value."""
  paymentId_gt: String

  """All values greater than or equal the given value."""
  paymentId_gte: String

  """All values containing the given string."""
  paymentId_contains: String

  """All values not containing the given string."""
  paymentId_not_contains: String

  """All values starting with the given string."""
  paymentId_starts_with: String

  """All values not starting with the given string."""
  paymentId_not_starts_with: String

  """All values ending with the given string."""
  paymentId_ends_with: String

  """All values not ending with the given string."""
  paymentId_not_ends_with: String
  checkrCandidateId: String

  """All values that are not equal to given value."""
  checkrCandidateId_not: String

  """All values that are contained in given list."""
  checkrCandidateId_in: [String!]

  """All values that are not contained in given list."""
  checkrCandidateId_not_in: [String!]

  """All values less than the given value."""
  checkrCandidateId_lt: String

  """All values less than or equal the given value."""
  checkrCandidateId_lte: String

  """All values greater than the given value."""
  checkrCandidateId_gt: String

  """All values greater than or equal the given value."""
  checkrCandidateId_gte: String

  """All values containing the given string."""
  checkrCandidateId_contains: String

  """All values not containing the given string."""
  checkrCandidateId_not_contains: String

  """All values starting with the given string."""
  checkrCandidateId_starts_with: String

  """All values not starting with the given string."""
  checkrCandidateId_not_starts_with: String

  """All values ending with the given string."""
  checkrCandidateId_ends_with: String

  """All values not ending with the given string."""
  checkrCandidateId_not_ends_with: String
  checkrStatus: CheckrStatusEnum

  """All values that are not equal to given value."""
  checkrStatus_not: CheckrStatusEnum

  """All values that are contained in given list."""
  checkrStatus_in: [CheckrStatusEnum!]

  """All values that are not contained in given list."""
  checkrStatus_not_in: [CheckrStatusEnum!]
  driver: DriverWhereInput
  missingInfo: BackgroundCheckMissingInfoWhereInput
}

type Car implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  completedInspection: Boolean
  dailyPriceInCents: Int
  description: String
  makeId: String
  make: String
  modelId: String
  model: String
  yearId: String
  year: String
  instantApprove: Boolean
  licensePlate: String
  mileage: Int
  maxDailyMiles: Int
  maxWeeklyMiles: Int
  maxMonthlyMiles: Int
  monthlyPriceInCents: Int
  registrationExpirationAt: DateTime
  vin: String
  weeklyPriceInCents: Int
  status: MarketStatusEnum
  verification: CarStatusEnum
  location(where: CarLocationWhereInput): CarLocation
  tlcCertified: Boolean
  photos(where: CarPhotoWhereInput, orderBy: CarPhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CarPhoto!]
  documents(where: CarDocumentWhereInput, orderBy: CarDocumentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CarDocument!]
  missingInfo(where: CarMissingInfoWhereInput): CarMissingInfo
  claims(filter: ClaimWhereInput, orderBy: ClaimOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Claim!]
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminNoteConnection
  owner: Owner
  rentals(filter: RentalWhereInput, orderBy: RentalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalConnection!
  ratings(filter: RatingWhereInput, orderBy: RatingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RatingConnection!
  carRatingsMeta: CarRatingsMeta
}

"""A connection to a list of items."""
type CarConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CarEdge]!
  aggregate: AggregateCar!
}

type CarDocument implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: CarDocumentTypeEnum!
  fileId: ID!
  car(where: CarWhereInput): Car
  file: File
}

enum CarDocumentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  type_ASC
  type_DESC
  fileId_ASC
  fileId_DESC
}

enum CarDocumentTypeEnum {
  REGISTRATION
  UBER_LYFT_INSPECTION
  PERSONAL_INSURANCE
}

input CarDocumentWhereInput {
  """Logical AND on all given filters."""
  AND: [CarDocumentWhereInput!]

  """Logical OR on all given filters."""
  OR: [CarDocumentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CarDocumentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  type: CarDocumentTypeEnum

  """All values that are not equal to given value."""
  type_not: CarDocumentTypeEnum

  """All values that are contained in given list."""
  type_in: [CarDocumentTypeEnum!]

  """All values that are not contained in given list."""
  type_not_in: [CarDocumentTypeEnum!]
  fileId: ID

  """All values that are not equal to given value."""
  fileId_not: ID

  """All values that are contained in given list."""
  fileId_in: [ID!]

  """All values that are not contained in given list."""
  fileId_not_in: [ID!]

  """All values less than the given value."""
  fileId_lt: ID

  """All values less than or equal the given value."""
  fileId_lte: ID

  """All values greater than the given value."""
  fileId_gt: ID

  """All values greater than or equal the given value."""
  fileId_gte: ID

  """All values containing the given string."""
  fileId_contains: ID

  """All values not containing the given string."""
  fileId_not_contains: ID

  """All values starting with the given string."""
  fileId_starts_with: ID

  """All values not starting with the given string."""
  fileId_not_starts_with: ID

  """All values ending with the given string."""
  fileId_ends_with: ID

  """All values not ending with the given string."""
  fileId_not_ends_with: ID
  car: CarWhereInput
}

"""An edge in a connection."""
type CarEdge {
  """The item at the end of the edge."""
  node: Car!

  """A cursor for use in pagination."""
  cursor: String!
}

type CarLocation implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  lat: Float
  lng: Float
  formattedAddress: String
  street: String
  city: String
  state: String
  zip: String
  car(where: CarWhereInput): Car
}

input CarLocationWhereInput {
  """Logical AND on all given filters."""
  AND: [CarLocationWhereInput!]

  """Logical OR on all given filters."""
  OR: [CarLocationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CarLocationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  lat: Float

  """All values that are not equal to given value."""
  lat_not: Float

  """All values that are contained in given list."""
  lat_in: [Float!]

  """All values that are not contained in given list."""
  lat_not_in: [Float!]

  """All values less than the given value."""
  lat_lt: Float

  """All values less than or equal the given value."""
  lat_lte: Float

  """All values greater than the given value."""
  lat_gt: Float

  """All values greater than or equal the given value."""
  lat_gte: Float
  lng: Float

  """All values that are not equal to given value."""
  lng_not: Float

  """All values that are contained in given list."""
  lng_in: [Float!]

  """All values that are not contained in given list."""
  lng_not_in: [Float!]

  """All values less than the given value."""
  lng_lt: Float

  """All values less than or equal the given value."""
  lng_lte: Float

  """All values greater than the given value."""
  lng_gt: Float

  """All values greater than or equal the given value."""
  lng_gte: Float
  formattedAddress: String

  """All values that are not equal to given value."""
  formattedAddress_not: String

  """All values that are contained in given list."""
  formattedAddress_in: [String!]

  """All values that are not contained in given list."""
  formattedAddress_not_in: [String!]

  """All values less than the given value."""
  formattedAddress_lt: String

  """All values less than or equal the given value."""
  formattedAddress_lte: String

  """All values greater than the given value."""
  formattedAddress_gt: String

  """All values greater than or equal the given value."""
  formattedAddress_gte: String

  """All values containing the given string."""
  formattedAddress_contains: String

  """All values not containing the given string."""
  formattedAddress_not_contains: String

  """All values starting with the given string."""
  formattedAddress_starts_with: String

  """All values not starting with the given string."""
  formattedAddress_not_starts_with: String

  """All values ending with the given string."""
  formattedAddress_ends_with: String

  """All values not ending with the given string."""
  formattedAddress_not_ends_with: String
  street: String

  """All values that are not equal to given value."""
  street_not: String

  """All values that are contained in given list."""
  street_in: [String!]

  """All values that are not contained in given list."""
  street_not_in: [String!]

  """All values less than the given value."""
  street_lt: String

  """All values less than or equal the given value."""
  street_lte: String

  """All values greater than the given value."""
  street_gt: String

  """All values greater than or equal the given value."""
  street_gte: String

  """All values containing the given string."""
  street_contains: String

  """All values not containing the given string."""
  street_not_contains: String

  """All values starting with the given string."""
  street_starts_with: String

  """All values not starting with the given string."""
  street_not_starts_with: String

  """All values ending with the given string."""
  street_ends_with: String

  """All values not ending with the given string."""
  street_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  zip: String

  """All values that are not equal to given value."""
  zip_not: String

  """All values that are contained in given list."""
  zip_in: [String!]

  """All values that are not contained in given list."""
  zip_not_in: [String!]

  """All values less than the given value."""
  zip_lt: String

  """All values less than or equal the given value."""
  zip_lte: String

  """All values greater than the given value."""
  zip_gt: String

  """All values greater than or equal the given value."""
  zip_gte: String

  """All values containing the given string."""
  zip_contains: String

  """All values not containing the given string."""
  zip_not_contains: String

  """All values starting with the given string."""
  zip_starts_with: String

  """All values not starting with the given string."""
  zip_not_starts_with: String

  """All values ending with the given string."""
  zip_ends_with: String

  """All values not ending with the given string."""
  zip_not_ends_with: String
  car: CarWhereInput
}

type CarMissingInfo implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  car(where: CarWhereInput): Car!
  missingRegistration: Boolean
  missingInspection: Boolean
  missingPersonalInsurance: Boolean
  invalidRegistration: Boolean
  invalidInspection: Boolean
}

input CarMissingInfoWhereInput {
  """Logical AND on all given filters."""
  AND: [CarMissingInfoWhereInput!]

  """Logical OR on all given filters."""
  OR: [CarMissingInfoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CarMissingInfoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  missingRegistration: Boolean

  """All values that are not equal to given value."""
  missingRegistration_not: Boolean
  missingInspection: Boolean

  """All values that are not equal to given value."""
  missingInspection_not: Boolean
  missingPersonalInsurance: Boolean

  """All values that are not equal to given value."""
  missingPersonalInsurance_not: Boolean
  invalidRegistration: Boolean

  """All values that are not equal to given value."""
  invalidRegistration_not: Boolean
  invalidInspection: Boolean

  """All values that are not equal to given value."""
  invalidInspection_not: Boolean
  car: CarWhereInput
}

enum CarOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  completedInspection_ASC
  completedInspection_DESC
  dailyPriceInCents_ASC
  dailyPriceInCents_DESC
  description_ASC
  description_DESC
  makeId_ASC
  makeId_DESC
  make_ASC
  make_DESC
  modelId_ASC
  modelId_DESC
  model_ASC
  model_DESC
  yearId_ASC
  yearId_DESC
  year_ASC
  year_DESC
  instantApprove_ASC
  instantApprove_DESC
  licensePlate_ASC
  licensePlate_DESC
  mileage_ASC
  mileage_DESC
  maxDailyMiles_ASC
  maxDailyMiles_DESC
  maxWeeklyMiles_ASC
  maxWeeklyMiles_DESC
  maxMonthlyMiles_ASC
  maxMonthlyMiles_DESC
  monthlyPriceInCents_ASC
  monthlyPriceInCents_DESC
  ownerId_ASC
  ownerId_DESC
  registrationExpirationAt_ASC
  registrationExpirationAt_DESC
  vin_ASC
  vin_DESC
  weeklyPriceInCents_ASC
  weeklyPriceInCents_DESC
  status_ASC
  status_DESC
  verification_ASC
  verification_DESC
  tlcCertified_ASC
  tlcCertified_DESC
}

type CarPhoto implements Node {
  id: ID!
  fileId: ID!
  isPrimary: Boolean
  car(where: CarWhereInput): Car
  file: File
}

enum CarPhotoOrderByInput {
  id_ASC
  id_DESC
  fileId_ASC
  fileId_DESC
  isPrimary_ASC
  isPrimary_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

input CarPhotoWhereInput {
  """Logical AND on all given filters."""
  AND: [CarPhotoWhereInput!]

  """Logical OR on all given filters."""
  OR: [CarPhotoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CarPhotoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  fileId: ID

  """All values that are not equal to given value."""
  fileId_not: ID

  """All values that are contained in given list."""
  fileId_in: [ID!]

  """All values that are not contained in given list."""
  fileId_not_in: [ID!]

  """All values less than the given value."""
  fileId_lt: ID

  """All values less than or equal the given value."""
  fileId_lte: ID

  """All values greater than the given value."""
  fileId_gt: ID

  """All values greater than or equal the given value."""
  fileId_gte: ID

  """All values containing the given string."""
  fileId_contains: ID

  """All values not containing the given string."""
  fileId_not_contains: ID

  """All values starting with the given string."""
  fileId_starts_with: ID

  """All values not starting with the given string."""
  fileId_not_starts_with: ID

  """All values ending with the given string."""
  fileId_ends_with: ID

  """All values not ending with the given string."""
  fileId_not_ends_with: ID
  isPrimary: Boolean

  """All values that are not equal to given value."""
  isPrimary_not: Boolean
  car: CarWhereInput
}

type CarPriceBreakdown {
  id: ID
  basePriceBeforeDiscounts: Int
  weeklyDiscount: Int
  weeklyDiscountPercent: Float
  monthlyDiscount: Int
  monthlyDiscountPercent: Float
  basePriceAfterLongRentalDiscounts: Int
  transactionFee: Int
  insuranceFee: Int
  couponDiscount: Int
  grandTotal: Int
  refundableDeposit: Int
  INSURANCE_CENTS_PER_DAY: Int
  CENTS_PER_DOLLAR: Int
  TRANSACTION_FEE: Float
  REFUNDABLE_DEPOSIT_CENTS: Int
  numMonths: Int
  numWeeks: Int
  numDays: Int
  coupon: Coupon
}

type CarRatingsMeta {
  totalRatings: Int
  avgRating: Float
}

enum CarStatusEnum {
  VERIFIED
  PENDING_VERIFICATION
  FAILED_VERIFICATION
}

input CarWhereInput {
  """Logical AND on all given filters."""
  AND: [CarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  completedInspection: Boolean

  """All values that are not equal to given value."""
  completedInspection_not: Boolean
  dailyPriceInCents: Int

  """All values that are not equal to given value."""
  dailyPriceInCents_not: Int

  """All values that are contained in given list."""
  dailyPriceInCents_in: [Int!]

  """All values that are not contained in given list."""
  dailyPriceInCents_not_in: [Int!]

  """All values less than the given value."""
  dailyPriceInCents_lt: Int

  """All values less than or equal the given value."""
  dailyPriceInCents_lte: Int

  """All values greater than the given value."""
  dailyPriceInCents_gt: Int

  """All values greater than or equal the given value."""
  dailyPriceInCents_gte: Int
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  makeId: String

  """All values that are not equal to given value."""
  makeId_not: String

  """All values that are contained in given list."""
  makeId_in: [String!]

  """All values that are not contained in given list."""
  makeId_not_in: [String!]

  """All values less than the given value."""
  makeId_lt: String

  """All values less than or equal the given value."""
  makeId_lte: String

  """All values greater than the given value."""
  makeId_gt: String

  """All values greater than or equal the given value."""
  makeId_gte: String

  """All values containing the given string."""
  makeId_contains: String

  """All values not containing the given string."""
  makeId_not_contains: String

  """All values starting with the given string."""
  makeId_starts_with: String

  """All values not starting with the given string."""
  makeId_not_starts_with: String

  """All values ending with the given string."""
  makeId_ends_with: String

  """All values not ending with the given string."""
  makeId_not_ends_with: String
  make: String

  """All values that are not equal to given value."""
  make_not: String

  """All values that are contained in given list."""
  make_in: [String!]

  """All values that are not contained in given list."""
  make_not_in: [String!]

  """All values less than the given value."""
  make_lt: String

  """All values less than or equal the given value."""
  make_lte: String

  """All values greater than the given value."""
  make_gt: String

  """All values greater than or equal the given value."""
  make_gte: String

  """All values containing the given string."""
  make_contains: String

  """All values not containing the given string."""
  make_not_contains: String

  """All values starting with the given string."""
  make_starts_with: String

  """All values not starting with the given string."""
  make_not_starts_with: String

  """All values ending with the given string."""
  make_ends_with: String

  """All values not ending with the given string."""
  make_not_ends_with: String
  modelId: String

  """All values that are not equal to given value."""
  modelId_not: String

  """All values that are contained in given list."""
  modelId_in: [String!]

  """All values that are not contained in given list."""
  modelId_not_in: [String!]

  """All values less than the given value."""
  modelId_lt: String

  """All values less than or equal the given value."""
  modelId_lte: String

  """All values greater than the given value."""
  modelId_gt: String

  """All values greater than or equal the given value."""
  modelId_gte: String

  """All values containing the given string."""
  modelId_contains: String

  """All values not containing the given string."""
  modelId_not_contains: String

  """All values starting with the given string."""
  modelId_starts_with: String

  """All values not starting with the given string."""
  modelId_not_starts_with: String

  """All values ending with the given string."""
  modelId_ends_with: String

  """All values not ending with the given string."""
  modelId_not_ends_with: String
  model: String

  """All values that are not equal to given value."""
  model_not: String

  """All values that are contained in given list."""
  model_in: [String!]

  """All values that are not contained in given list."""
  model_not_in: [String!]

  """All values less than the given value."""
  model_lt: String

  """All values less than or equal the given value."""
  model_lte: String

  """All values greater than the given value."""
  model_gt: String

  """All values greater than or equal the given value."""
  model_gte: String

  """All values containing the given string."""
  model_contains: String

  """All values not containing the given string."""
  model_not_contains: String

  """All values starting with the given string."""
  model_starts_with: String

  """All values not starting with the given string."""
  model_not_starts_with: String

  """All values ending with the given string."""
  model_ends_with: String

  """All values not ending with the given string."""
  model_not_ends_with: String
  yearId: String

  """All values that are not equal to given value."""
  yearId_not: String

  """All values that are contained in given list."""
  yearId_in: [String!]

  """All values that are not contained in given list."""
  yearId_not_in: [String!]

  """All values less than the given value."""
  yearId_lt: String

  """All values less than or equal the given value."""
  yearId_lte: String

  """All values greater than the given value."""
  yearId_gt: String

  """All values greater than or equal the given value."""
  yearId_gte: String

  """All values containing the given string."""
  yearId_contains: String

  """All values not containing the given string."""
  yearId_not_contains: String

  """All values starting with the given string."""
  yearId_starts_with: String

  """All values not starting with the given string."""
  yearId_not_starts_with: String

  """All values ending with the given string."""
  yearId_ends_with: String

  """All values not ending with the given string."""
  yearId_not_ends_with: String
  year: String

  """All values that are not equal to given value."""
  year_not: String

  """All values that are contained in given list."""
  year_in: [String!]

  """All values that are not contained in given list."""
  year_not_in: [String!]

  """All values less than the given value."""
  year_lt: String

  """All values less than or equal the given value."""
  year_lte: String

  """All values greater than the given value."""
  year_gt: String

  """All values greater than or equal the given value."""
  year_gte: String

  """All values containing the given string."""
  year_contains: String

  """All values not containing the given string."""
  year_not_contains: String

  """All values starting with the given string."""
  year_starts_with: String

  """All values not starting with the given string."""
  year_not_starts_with: String

  """All values ending with the given string."""
  year_ends_with: String

  """All values not ending with the given string."""
  year_not_ends_with: String
  instantApprove: Boolean

  """All values that are not equal to given value."""
  instantApprove_not: Boolean
  licensePlate: String

  """All values that are not equal to given value."""
  licensePlate_not: String

  """All values that are contained in given list."""
  licensePlate_in: [String!]

  """All values that are not contained in given list."""
  licensePlate_not_in: [String!]

  """All values less than the given value."""
  licensePlate_lt: String

  """All values less than or equal the given value."""
  licensePlate_lte: String

  """All values greater than the given value."""
  licensePlate_gt: String

  """All values greater than or equal the given value."""
  licensePlate_gte: String

  """All values containing the given string."""
  licensePlate_contains: String

  """All values not containing the given string."""
  licensePlate_not_contains: String

  """All values starting with the given string."""
  licensePlate_starts_with: String

  """All values not starting with the given string."""
  licensePlate_not_starts_with: String

  """All values ending with the given string."""
  licensePlate_ends_with: String

  """All values not ending with the given string."""
  licensePlate_not_ends_with: String
  mileage: Int

  """All values that are not equal to given value."""
  mileage_not: Int

  """All values that are contained in given list."""
  mileage_in: [Int!]

  """All values that are not contained in given list."""
  mileage_not_in: [Int!]

  """All values less than the given value."""
  mileage_lt: Int

  """All values less than or equal the given value."""
  mileage_lte: Int

  """All values greater than the given value."""
  mileage_gt: Int

  """All values greater than or equal the given value."""
  mileage_gte: Int
  maxDailyMiles: Int

  """All values that are not equal to given value."""
  maxDailyMiles_not: Int

  """All values that are contained in given list."""
  maxDailyMiles_in: [Int!]

  """All values that are not contained in given list."""
  maxDailyMiles_not_in: [Int!]

  """All values less than the given value."""
  maxDailyMiles_lt: Int

  """All values less than or equal the given value."""
  maxDailyMiles_lte: Int

  """All values greater than the given value."""
  maxDailyMiles_gt: Int

  """All values greater than or equal the given value."""
  maxDailyMiles_gte: Int
  maxWeeklyMiles: Int

  """All values that are not equal to given value."""
  maxWeeklyMiles_not: Int

  """All values that are contained in given list."""
  maxWeeklyMiles_in: [Int!]

  """All values that are not contained in given list."""
  maxWeeklyMiles_not_in: [Int!]

  """All values less than the given value."""
  maxWeeklyMiles_lt: Int

  """All values less than or equal the given value."""
  maxWeeklyMiles_lte: Int

  """All values greater than the given value."""
  maxWeeklyMiles_gt: Int

  """All values greater than or equal the given value."""
  maxWeeklyMiles_gte: Int
  maxMonthlyMiles: Int

  """All values that are not equal to given value."""
  maxMonthlyMiles_not: Int

  """All values that are contained in given list."""
  maxMonthlyMiles_in: [Int!]

  """All values that are not contained in given list."""
  maxMonthlyMiles_not_in: [Int!]

  """All values less than the given value."""
  maxMonthlyMiles_lt: Int

  """All values less than or equal the given value."""
  maxMonthlyMiles_lte: Int

  """All values greater than the given value."""
  maxMonthlyMiles_gt: Int

  """All values greater than or equal the given value."""
  maxMonthlyMiles_gte: Int
  monthlyPriceInCents: Int

  """All values that are not equal to given value."""
  monthlyPriceInCents_not: Int

  """All values that are contained in given list."""
  monthlyPriceInCents_in: [Int!]

  """All values that are not contained in given list."""
  monthlyPriceInCents_not_in: [Int!]

  """All values less than the given value."""
  monthlyPriceInCents_lt: Int

  """All values less than or equal the given value."""
  monthlyPriceInCents_lte: Int

  """All values greater than the given value."""
  monthlyPriceInCents_gt: Int

  """All values greater than or equal the given value."""
  monthlyPriceInCents_gte: Int
  ownerId: String

  """All values that are not equal to given value."""
  ownerId_not: String

  """All values that are contained in given list."""
  ownerId_in: [String!]

  """All values that are not contained in given list."""
  ownerId_not_in: [String!]

  """All values less than the given value."""
  ownerId_lt: String

  """All values less than or equal the given value."""
  ownerId_lte: String

  """All values greater than the given value."""
  ownerId_gt: String

  """All values greater than or equal the given value."""
  ownerId_gte: String

  """All values containing the given string."""
  ownerId_contains: String

  """All values not containing the given string."""
  ownerId_not_contains: String

  """All values starting with the given string."""
  ownerId_starts_with: String

  """All values not starting with the given string."""
  ownerId_not_starts_with: String

  """All values ending with the given string."""
  ownerId_ends_with: String

  """All values not ending with the given string."""
  ownerId_not_ends_with: String
  registrationExpirationAt: DateTime

  """All values that are not equal to given value."""
  registrationExpirationAt_not: DateTime

  """All values that are contained in given list."""
  registrationExpirationAt_in: [DateTime!]

  """All values that are not contained in given list."""
  registrationExpirationAt_not_in: [DateTime!]

  """All values less than the given value."""
  registrationExpirationAt_lt: DateTime

  """All values less than or equal the given value."""
  registrationExpirationAt_lte: DateTime

  """All values greater than the given value."""
  registrationExpirationAt_gt: DateTime

  """All values greater than or equal the given value."""
  registrationExpirationAt_gte: DateTime
  vin: String

  """All values that are not equal to given value."""
  vin_not: String

  """All values that are contained in given list."""
  vin_in: [String!]

  """All values that are not contained in given list."""
  vin_not_in: [String!]

  """All values less than the given value."""
  vin_lt: String

  """All values less than or equal the given value."""
  vin_lte: String

  """All values greater than the given value."""
  vin_gt: String

  """All values greater than or equal the given value."""
  vin_gte: String

  """All values containing the given string."""
  vin_contains: String

  """All values not containing the given string."""
  vin_not_contains: String

  """All values starting with the given string."""
  vin_starts_with: String

  """All values not starting with the given string."""
  vin_not_starts_with: String

  """All values ending with the given string."""
  vin_ends_with: String

  """All values not ending with the given string."""
  vin_not_ends_with: String
  weeklyPriceInCents: Int

  """All values that are not equal to given value."""
  weeklyPriceInCents_not: Int

  """All values that are contained in given list."""
  weeklyPriceInCents_in: [Int!]

  """All values that are not contained in given list."""
  weeklyPriceInCents_not_in: [Int!]

  """All values less than the given value."""
  weeklyPriceInCents_lt: Int

  """All values less than or equal the given value."""
  weeklyPriceInCents_lte: Int

  """All values greater than the given value."""
  weeklyPriceInCents_gt: Int

  """All values greater than or equal the given value."""
  weeklyPriceInCents_gte: Int
  status: MarketStatusEnum

  """All values that are not equal to given value."""
  status_not: MarketStatusEnum

  """All values that are contained in given list."""
  status_in: [MarketStatusEnum!]

  """All values that are not contained in given list."""
  status_not_in: [MarketStatusEnum!]
  verification: CarStatusEnum

  """All values that are not equal to given value."""
  verification_not: CarStatusEnum

  """All values that are contained in given list."""
  verification_in: [CarStatusEnum!]

  """All values that are not contained in given list."""
  verification_not_in: [CarStatusEnum!]
  tlcCertified: Boolean

  """All values that are not equal to given value."""
  tlcCertified_not: Boolean
  location: CarLocationWhereInput
  photos_every: CarPhotoWhereInput
  photos_some: CarPhotoWhereInput
  photos_none: CarPhotoWhereInput
  documents_every: CarDocumentWhereInput
  documents_some: CarDocumentWhereInput
  documents_none: CarDocumentWhereInput
  missingInfo: CarMissingInfoWhereInput
}

input CarWhereUniqueInput {
  id: ID
}

enum CheckrStatusEnum {
  PENDING
  CLEAR
  CONSIDER
  DISPUTE
  SUSPENDED
}

type Claim implements Node {
  accident(where: AccidentWhereInput): Accident
  insuranceId: ID
  driverId: ID
  carId: ID
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  ownerId: ID
  rentalId: ID!
  incidentals(where: IncidentalWhereInput, orderBy: IncidentalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Incidental!]
  zendeskTicketId: ID
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  evidences(where: EvidenceWhereInput, orderBy: EvidenceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Evidence!]
  status: ClaimStatus
  statementId: ID
  assignedAdmin(where: AdminWhereInput): Admin
  submittedByAdmin(where: AdminWhereInput): Admin
  submittedByType: ClaimReportedBy
  surveyComment: String
  meta: Json
  statement: ClaimStatement
  driver: Driver
  owner: Owner
  car: Car
  fnolPdfUrl: String
  rental: Rental
  insurance: Insurance
}

"""A connection to a list of items."""
type ClaimConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ClaimEdge]!
  aggregate: AggregateClaim!
}

"""An edge in a connection."""
type ClaimEdge {
  """The item at the end of the edge."""
  node: Claim!

  """A cursor for use in pagination."""
  cursor: String!
}

type ClaimInvoice implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: ClaimInvoiceStatus
  submittedByAdmin: ID
  statement(where: ClaimStatementWhereInput): ClaimStatement
  oldStatement(where: ClaimStatementWhereInput): ClaimStatement
  adminFeeInCents: Int
  referenceId: String
  claimId: ID
  meta: Json
  overview: ClaimInvoiceOverview
}

type ClaimInvoiceItem {
  description: String
  amountInCents: Int
}

enum ClaimInvoiceOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  status_ASC
  status_DESC
  submittedByAdmin_ASC
  submittedByAdmin_DESC
  adminFeeInCents_ASC
  adminFeeInCents_DESC
  referenceId_ASC
  referenceId_DESC
  claimId_ASC
  claimId_DESC
  meta_ASC
  meta_DESC
}

type ClaimInvoiceOverview {
  id: ID!
  bookingDate: DateTime
  pickupDate: DateTime
  dropOffDate: DateTime
  ownerName: String
  items: [ClaimInvoiceItem!]
  totalInCents: Int
}

enum ClaimInvoiceStatus {
  CLOSED
  OPEN
  PAID
  CANCELED
}

input ClaimInvoiceWhereInput {
  """Logical AND on all given filters."""
  AND: [ClaimInvoiceWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClaimInvoiceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClaimInvoiceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  status: ClaimInvoiceStatus

  """All values that are not equal to given value."""
  status_not: ClaimInvoiceStatus

  """All values that are contained in given list."""
  status_in: [ClaimInvoiceStatus!]

  """All values that are not contained in given list."""
  status_not_in: [ClaimInvoiceStatus!]
  submittedByAdmin: ID

  """All values that are not equal to given value."""
  submittedByAdmin_not: ID

  """All values that are contained in given list."""
  submittedByAdmin_in: [ID!]

  """All values that are not contained in given list."""
  submittedByAdmin_not_in: [ID!]

  """All values less than the given value."""
  submittedByAdmin_lt: ID

  """All values less than or equal the given value."""
  submittedByAdmin_lte: ID

  """All values greater than the given value."""
  submittedByAdmin_gt: ID

  """All values greater than or equal the given value."""
  submittedByAdmin_gte: ID

  """All values containing the given string."""
  submittedByAdmin_contains: ID

  """All values not containing the given string."""
  submittedByAdmin_not_contains: ID

  """All values starting with the given string."""
  submittedByAdmin_starts_with: ID

  """All values not starting with the given string."""
  submittedByAdmin_not_starts_with: ID

  """All values ending with the given string."""
  submittedByAdmin_ends_with: ID

  """All values not ending with the given string."""
  submittedByAdmin_not_ends_with: ID
  adminFeeInCents: Int

  """All values that are not equal to given value."""
  adminFeeInCents_not: Int

  """All values that are contained in given list."""
  adminFeeInCents_in: [Int!]

  """All values that are not contained in given list."""
  adminFeeInCents_not_in: [Int!]

  """All values less than the given value."""
  adminFeeInCents_lt: Int

  """All values less than or equal the given value."""
  adminFeeInCents_lte: Int

  """All values greater than the given value."""
  adminFeeInCents_gt: Int

  """All values greater than or equal the given value."""
  adminFeeInCents_gte: Int
  referenceId: String

  """All values that are not equal to given value."""
  referenceId_not: String

  """All values that are contained in given list."""
  referenceId_in: [String!]

  """All values that are not contained in given list."""
  referenceId_not_in: [String!]

  """All values less than the given value."""
  referenceId_lt: String

  """All values less than or equal the given value."""
  referenceId_lte: String

  """All values greater than the given value."""
  referenceId_gt: String

  """All values greater than or equal the given value."""
  referenceId_gte: String

  """All values containing the given string."""
  referenceId_contains: String

  """All values not containing the given string."""
  referenceId_not_contains: String

  """All values starting with the given string."""
  referenceId_starts_with: String

  """All values not starting with the given string."""
  referenceId_not_starts_with: String

  """All values ending with the given string."""
  referenceId_ends_with: String

  """All values not ending with the given string."""
  referenceId_not_ends_with: String
  claimId: ID

  """All values that are not equal to given value."""
  claimId_not: ID

  """All values that are contained in given list."""
  claimId_in: [ID!]

  """All values that are not contained in given list."""
  claimId_not_in: [ID!]

  """All values less than the given value."""
  claimId_lt: ID

  """All values less than or equal the given value."""
  claimId_lte: ID

  """All values greater than the given value."""
  claimId_gt: ID

  """All values greater than or equal the given value."""
  claimId_gte: ID

  """All values containing the given string."""
  claimId_contains: ID

  """All values not containing the given string."""
  claimId_not_contains: ID

  """All values starting with the given string."""
  claimId_starts_with: ID

  """All values not starting with the given string."""
  claimId_not_starts_with: ID

  """All values ending with the given string."""
  claimId_ends_with: ID

  """All values not ending with the given string."""
  claimId_not_ends_with: ID
  statement: ClaimStatementWhereInput
  oldStatement: ClaimStatementWhereInput
}

enum ClaimOrderByInput {
  insuranceId_ASC
  insuranceId_DESC
  driverId_ASC
  driverId_DESC
  carId_ASC
  carId_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  ownerId_ASC
  ownerId_DESC
  rentalId_ASC
  rentalId_DESC
  zendeskTicketId_ASC
  zendeskTicketId_DESC
  status_ASC
  status_DESC
  statementId_ASC
  statementId_DESC
  submittedByType_ASC
  submittedByType_DESC
  surveyComment_ASC
  surveyComment_DESC
  meta_ASC
  meta_DESC
}

enum ClaimPaidByParty {
  TNC
  THIRD_PARTY
  DRIVER
  HYRECAR
}

type ClaimPayment implements Node {
  id: ID!
  chargeId: String
  paymentAccount(where: PaymentAccountWhereInput): PaymentAccount
  amountInCents: Int
  claimStatement(where: ClaimStatementWhereInput): ClaimStatement!
  paidBy: ClaimPaidByParty
  meta: Json
}

enum ClaimPaymentOrderByInput {
  id_ASC
  id_DESC
  chargeId_ASC
  chargeId_DESC
  amountInCents_ASC
  amountInCents_DESC
  paidBy_ASC
  paidBy_DESC
  meta_ASC
  meta_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

enum ClaimPaymentPlanManager {
  HC_MANAGED
  HC_PAYMENT
  OFF_PLATFORM
}

enum ClaimPaymentPlanPeriod {
  MONTHLY
  WEEKLY
  BIWEEKLY
}

enum ClaimPaymentPlanStatus {
  OPEN
  PAID_IN_FULL
  COLLECTIONS
  SETTLED
  NOT_STARTED
}

input ClaimPaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [ClaimPaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClaimPaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClaimPaymentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  chargeId: String

  """All values that are not equal to given value."""
  chargeId_not: String

  """All values that are contained in given list."""
  chargeId_in: [String!]

  """All values that are not contained in given list."""
  chargeId_not_in: [String!]

  """All values less than the given value."""
  chargeId_lt: String

  """All values less than or equal the given value."""
  chargeId_lte: String

  """All values greater than the given value."""
  chargeId_gt: String

  """All values greater than or equal the given value."""
  chargeId_gte: String

  """All values containing the given string."""
  chargeId_contains: String

  """All values not containing the given string."""
  chargeId_not_contains: String

  """All values starting with the given string."""
  chargeId_starts_with: String

  """All values not starting with the given string."""
  chargeId_not_starts_with: String

  """All values ending with the given string."""
  chargeId_ends_with: String

  """All values not ending with the given string."""
  chargeId_not_ends_with: String
  amountInCents: Int

  """All values that are not equal to given value."""
  amountInCents_not: Int

  """All values that are contained in given list."""
  amountInCents_in: [Int!]

  """All values that are not contained in given list."""
  amountInCents_not_in: [Int!]

  """All values less than the given value."""
  amountInCents_lt: Int

  """All values less than or equal the given value."""
  amountInCents_lte: Int

  """All values greater than the given value."""
  amountInCents_gt: Int

  """All values greater than or equal the given value."""
  amountInCents_gte: Int
  paidBy: ClaimPaidByParty

  """All values that are not equal to given value."""
  paidBy_not: ClaimPaidByParty

  """All values that are contained in given list."""
  paidBy_in: [ClaimPaidByParty!]

  """All values that are not contained in given list."""
  paidBy_not_in: [ClaimPaidByParty!]
  paymentAccount: PaymentAccountWhereInput
  claimStatement: ClaimStatementWhereInput
}

enum ClaimReportedBy {
  OWNER
  ADMIN
  DRIVER
}

type ClaimStatement implements Node {
  id: ID!
  createdAt: DateTime!
  status: ClaimPaymentPlanStatus!
  managedBy: ClaimPaymentPlanManager!
  updatedAt: DateTime!
  submittedByAdmin: ID
  submittedByUserId: ID
  assigedAdmin: ID
  numberOfPayments: Int
  paidInFullBy: DateTime
  planPeriod: ClaimPaymentPlanPeriod!
  claimId: ID!
  driverId: ID
  invoice(where: ClaimInvoiceWhereInput): ClaimInvoice
  invoices(where: ClaimInvoiceWhereInput, orderBy: ClaimInvoiceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClaimInvoice!]
  deposit(where: DepositWhereInput): Deposit
  payments(where: ClaimPaymentWhereInput, orderBy: ClaimPaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClaimPayment!]
  submittedByUser: User
  submittedBy: User
}

input ClaimStatementWhereInput {
  """Logical AND on all given filters."""
  AND: [ClaimStatementWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClaimStatementWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClaimStatementWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  status: ClaimPaymentPlanStatus

  """All values that are not equal to given value."""
  status_not: ClaimPaymentPlanStatus

  """All values that are contained in given list."""
  status_in: [ClaimPaymentPlanStatus!]

  """All values that are not contained in given list."""
  status_not_in: [ClaimPaymentPlanStatus!]
  managedBy: ClaimPaymentPlanManager

  """All values that are not equal to given value."""
  managedBy_not: ClaimPaymentPlanManager

  """All values that are contained in given list."""
  managedBy_in: [ClaimPaymentPlanManager!]

  """All values that are not contained in given list."""
  managedBy_not_in: [ClaimPaymentPlanManager!]
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  submittedByAdmin: ID

  """All values that are not equal to given value."""
  submittedByAdmin_not: ID

  """All values that are contained in given list."""
  submittedByAdmin_in: [ID!]

  """All values that are not contained in given list."""
  submittedByAdmin_not_in: [ID!]

  """All values less than the given value."""
  submittedByAdmin_lt: ID

  """All values less than or equal the given value."""
  submittedByAdmin_lte: ID

  """All values greater than the given value."""
  submittedByAdmin_gt: ID

  """All values greater than or equal the given value."""
  submittedByAdmin_gte: ID

  """All values containing the given string."""
  submittedByAdmin_contains: ID

  """All values not containing the given string."""
  submittedByAdmin_not_contains: ID

  """All values starting with the given string."""
  submittedByAdmin_starts_with: ID

  """All values not starting with the given string."""
  submittedByAdmin_not_starts_with: ID

  """All values ending with the given string."""
  submittedByAdmin_ends_with: ID

  """All values not ending with the given string."""
  submittedByAdmin_not_ends_with: ID
  submittedByUserId: ID

  """All values that are not equal to given value."""
  submittedByUserId_not: ID

  """All values that are contained in given list."""
  submittedByUserId_in: [ID!]

  """All values that are not contained in given list."""
  submittedByUserId_not_in: [ID!]

  """All values less than the given value."""
  submittedByUserId_lt: ID

  """All values less than or equal the given value."""
  submittedByUserId_lte: ID

  """All values greater than the given value."""
  submittedByUserId_gt: ID

  """All values greater than or equal the given value."""
  submittedByUserId_gte: ID

  """All values containing the given string."""
  submittedByUserId_contains: ID

  """All values not containing the given string."""
  submittedByUserId_not_contains: ID

  """All values starting with the given string."""
  submittedByUserId_starts_with: ID

  """All values not starting with the given string."""
  submittedByUserId_not_starts_with: ID

  """All values ending with the given string."""
  submittedByUserId_ends_with: ID

  """All values not ending with the given string."""
  submittedByUserId_not_ends_with: ID
  assigedAdmin: ID

  """All values that are not equal to given value."""
  assigedAdmin_not: ID

  """All values that are contained in given list."""
  assigedAdmin_in: [ID!]

  """All values that are not contained in given list."""
  assigedAdmin_not_in: [ID!]

  """All values less than the given value."""
  assigedAdmin_lt: ID

  """All values less than or equal the given value."""
  assigedAdmin_lte: ID

  """All values greater than the given value."""
  assigedAdmin_gt: ID

  """All values greater than or equal the given value."""
  assigedAdmin_gte: ID

  """All values containing the given string."""
  assigedAdmin_contains: ID

  """All values not containing the given string."""
  assigedAdmin_not_contains: ID

  """All values starting with the given string."""
  assigedAdmin_starts_with: ID

  """All values not starting with the given string."""
  assigedAdmin_not_starts_with: ID

  """All values ending with the given string."""
  assigedAdmin_ends_with: ID

  """All values not ending with the given string."""
  assigedAdmin_not_ends_with: ID
  numberOfPayments: Int

  """All values that are not equal to given value."""
  numberOfPayments_not: Int

  """All values that are contained in given list."""
  numberOfPayments_in: [Int!]

  """All values that are not contained in given list."""
  numberOfPayments_not_in: [Int!]

  """All values less than the given value."""
  numberOfPayments_lt: Int

  """All values less than or equal the given value."""
  numberOfPayments_lte: Int

  """All values greater than the given value."""
  numberOfPayments_gt: Int

  """All values greater than or equal the given value."""
  numberOfPayments_gte: Int
  paidInFullBy: DateTime

  """All values that are not equal to given value."""
  paidInFullBy_not: DateTime

  """All values that are contained in given list."""
  paidInFullBy_in: [DateTime!]

  """All values that are not contained in given list."""
  paidInFullBy_not_in: [DateTime!]

  """All values less than the given value."""
  paidInFullBy_lt: DateTime

  """All values less than or equal the given value."""
  paidInFullBy_lte: DateTime

  """All values greater than the given value."""
  paidInFullBy_gt: DateTime

  """All values greater than or equal the given value."""
  paidInFullBy_gte: DateTime
  planPeriod: ClaimPaymentPlanPeriod

  """All values that are not equal to given value."""
  planPeriod_not: ClaimPaymentPlanPeriod

  """All values that are contained in given list."""
  planPeriod_in: [ClaimPaymentPlanPeriod!]

  """All values that are not contained in given list."""
  planPeriod_not_in: [ClaimPaymentPlanPeriod!]
  claimId: ID

  """All values that are not equal to given value."""
  claimId_not: ID

  """All values that are contained in given list."""
  claimId_in: [ID!]

  """All values that are not contained in given list."""
  claimId_not_in: [ID!]

  """All values less than the given value."""
  claimId_lt: ID

  """All values less than or equal the given value."""
  claimId_lte: ID

  """All values greater than the given value."""
  claimId_gt: ID

  """All values greater than or equal the given value."""
  claimId_gte: ID

  """All values containing the given string."""
  claimId_contains: ID

  """All values not containing the given string."""
  claimId_not_contains: ID

  """All values starting with the given string."""
  claimId_starts_with: ID

  """All values not starting with the given string."""
  claimId_not_starts_with: ID

  """All values ending with the given string."""
  claimId_ends_with: ID

  """All values not ending with the given string."""
  claimId_not_ends_with: ID
  driverId: ID

  """All values that are not equal to given value."""
  driverId_not: ID

  """All values that are contained in given list."""
  driverId_in: [ID!]

  """All values that are not contained in given list."""
  driverId_not_in: [ID!]

  """All values less than the given value."""
  driverId_lt: ID

  """All values less than or equal the given value."""
  driverId_lte: ID

  """All values greater than the given value."""
  driverId_gt: ID

  """All values greater than or equal the given value."""
  driverId_gte: ID

  """All values containing the given string."""
  driverId_contains: ID

  """All values not containing the given string."""
  driverId_not_contains: ID

  """All values starting with the given string."""
  driverId_starts_with: ID

  """All values not starting with the given string."""
  driverId_not_starts_with: ID

  """All values ending with the given string."""
  driverId_ends_with: ID

  """All values not ending with the given string."""
  driverId_not_ends_with: ID
  invoice: ClaimInvoiceWhereInput
  invoices_every: ClaimInvoiceWhereInput
  invoices_some: ClaimInvoiceWhereInput
  invoices_none: ClaimInvoiceWhereInput
  deposit: DepositWhereInput
  payments_every: ClaimPaymentWhereInput
  payments_some: ClaimPaymentWhereInput
  payments_none: ClaimPaymentWhereInput
}

enum ClaimStatus {
  REPORTED
  FALSE_CLAIM
  GATHERING_INFO
  CREDIBILITY
  FIGHTBACK
  PAYMENT
  SETTLED
  SENT_TO_UNDERWRITER
  SELF_SETTLEMENT_NEGOTIATION
  SENT_TO_FAIR_CLAIMS
  SENT_TO_YORK_CLAIMS
  DENIED
  SENT_TO_TNC
  THIRD_PARTY
  COLLECTIONS
  DELETED
}

input ClaimWhereInput {
  """Logical AND on all given filters."""
  AND: [ClaimWhereInput!]

  """Logical OR on all given filters."""
  OR: [ClaimWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ClaimWhereInput!]
  insuranceId: ID

  """All values that are not equal to given value."""
  insuranceId_not: ID

  """All values that are contained in given list."""
  insuranceId_in: [ID!]

  """All values that are not contained in given list."""
  insuranceId_not_in: [ID!]

  """All values less than the given value."""
  insuranceId_lt: ID

  """All values less than or equal the given value."""
  insuranceId_lte: ID

  """All values greater than the given value."""
  insuranceId_gt: ID

  """All values greater than or equal the given value."""
  insuranceId_gte: ID

  """All values containing the given string."""
  insuranceId_contains: ID

  """All values not containing the given string."""
  insuranceId_not_contains: ID

  """All values starting with the given string."""
  insuranceId_starts_with: ID

  """All values not starting with the given string."""
  insuranceId_not_starts_with: ID

  """All values ending with the given string."""
  insuranceId_ends_with: ID

  """All values not ending with the given string."""
  insuranceId_not_ends_with: ID
  driverId: ID

  """All values that are not equal to given value."""
  driverId_not: ID

  """All values that are contained in given list."""
  driverId_in: [ID!]

  """All values that are not contained in given list."""
  driverId_not_in: [ID!]

  """All values less than the given value."""
  driverId_lt: ID

  """All values less than or equal the given value."""
  driverId_lte: ID

  """All values greater than the given value."""
  driverId_gt: ID

  """All values greater than or equal the given value."""
  driverId_gte: ID

  """All values containing the given string."""
  driverId_contains: ID

  """All values not containing the given string."""
  driverId_not_contains: ID

  """All values starting with the given string."""
  driverId_starts_with: ID

  """All values not starting with the given string."""
  driverId_not_starts_with: ID

  """All values ending with the given string."""
  driverId_ends_with: ID

  """All values not ending with the given string."""
  driverId_not_ends_with: ID
  carId: ID

  """All values that are not equal to given value."""
  carId_not: ID

  """All values that are contained in given list."""
  carId_in: [ID!]

  """All values that are not contained in given list."""
  carId_not_in: [ID!]

  """All values less than the given value."""
  carId_lt: ID

  """All values less than or equal the given value."""
  carId_lte: ID

  """All values greater than the given value."""
  carId_gt: ID

  """All values greater than or equal the given value."""
  carId_gte: ID

  """All values containing the given string."""
  carId_contains: ID

  """All values not containing the given string."""
  carId_not_contains: ID

  """All values starting with the given string."""
  carId_starts_with: ID

  """All values not starting with the given string."""
  carId_not_starts_with: ID

  """All values ending with the given string."""
  carId_ends_with: ID

  """All values not ending with the given string."""
  carId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  ownerId: ID

  """All values that are not equal to given value."""
  ownerId_not: ID

  """All values that are contained in given list."""
  ownerId_in: [ID!]

  """All values that are not contained in given list."""
  ownerId_not_in: [ID!]

  """All values less than the given value."""
  ownerId_lt: ID

  """All values less than or equal the given value."""
  ownerId_lte: ID

  """All values greater than the given value."""
  ownerId_gt: ID

  """All values greater than or equal the given value."""
  ownerId_gte: ID

  """All values containing the given string."""
  ownerId_contains: ID

  """All values not containing the given string."""
  ownerId_not_contains: ID

  """All values starting with the given string."""
  ownerId_starts_with: ID

  """All values not starting with the given string."""
  ownerId_not_starts_with: ID

  """All values ending with the given string."""
  ownerId_ends_with: ID

  """All values not ending with the given string."""
  ownerId_not_ends_with: ID
  rentalId: ID

  """All values that are not equal to given value."""
  rentalId_not: ID

  """All values that are contained in given list."""
  rentalId_in: [ID!]

  """All values that are not contained in given list."""
  rentalId_not_in: [ID!]

  """All values less than the given value."""
  rentalId_lt: ID

  """All values less than or equal the given value."""
  rentalId_lte: ID

  """All values greater than the given value."""
  rentalId_gt: ID

  """All values greater than or equal the given value."""
  rentalId_gte: ID

  """All values containing the given string."""
  rentalId_contains: ID

  """All values not containing the given string."""
  rentalId_not_contains: ID

  """All values starting with the given string."""
  rentalId_starts_with: ID

  """All values not starting with the given string."""
  rentalId_not_starts_with: ID

  """All values ending with the given string."""
  rentalId_ends_with: ID

  """All values not ending with the given string."""
  rentalId_not_ends_with: ID
  zendeskTicketId: ID

  """All values that are not equal to given value."""
  zendeskTicketId_not: ID

  """All values that are contained in given list."""
  zendeskTicketId_in: [ID!]

  """All values that are not contained in given list."""
  zendeskTicketId_not_in: [ID!]

  """All values less than the given value."""
  zendeskTicketId_lt: ID

  """All values less than or equal the given value."""
  zendeskTicketId_lte: ID

  """All values greater than the given value."""
  zendeskTicketId_gt: ID

  """All values greater than or equal the given value."""
  zendeskTicketId_gte: ID

  """All values containing the given string."""
  zendeskTicketId_contains: ID

  """All values not containing the given string."""
  zendeskTicketId_not_contains: ID

  """All values starting with the given string."""
  zendeskTicketId_starts_with: ID

  """All values not starting with the given string."""
  zendeskTicketId_not_starts_with: ID

  """All values ending with the given string."""
  zendeskTicketId_ends_with: ID

  """All values not ending with the given string."""
  zendeskTicketId_not_ends_with: ID
  status: ClaimStatus

  """All values that are not equal to given value."""
  status_not: ClaimStatus

  """All values that are contained in given list."""
  status_in: [ClaimStatus!]

  """All values that are not contained in given list."""
  status_not_in: [ClaimStatus!]
  statementId: ID

  """All values that are not equal to given value."""
  statementId_not: ID

  """All values that are contained in given list."""
  statementId_in: [ID!]

  """All values that are not contained in given list."""
  statementId_not_in: [ID!]

  """All values less than the given value."""
  statementId_lt: ID

  """All values less than or equal the given value."""
  statementId_lte: ID

  """All values greater than the given value."""
  statementId_gt: ID

  """All values greater than or equal the given value."""
  statementId_gte: ID

  """All values containing the given string."""
  statementId_contains: ID

  """All values not containing the given string."""
  statementId_not_contains: ID

  """All values starting with the given string."""
  statementId_starts_with: ID

  """All values not starting with the given string."""
  statementId_not_starts_with: ID

  """All values ending with the given string."""
  statementId_ends_with: ID

  """All values not ending with the given string."""
  statementId_not_ends_with: ID
  submittedByType: ClaimReportedBy

  """All values that are not equal to given value."""
  submittedByType_not: ClaimReportedBy

  """All values that are contained in given list."""
  submittedByType_in: [ClaimReportedBy!]

  """All values that are not contained in given list."""
  submittedByType_not_in: [ClaimReportedBy!]
  surveyComment: String

  """All values that are not equal to given value."""
  surveyComment_not: String

  """All values that are contained in given list."""
  surveyComment_in: [String!]

  """All values that are not contained in given list."""
  surveyComment_not_in: [String!]

  """All values less than the given value."""
  surveyComment_lt: String

  """All values less than or equal the given value."""
  surveyComment_lte: String

  """All values greater than the given value."""
  surveyComment_gt: String

  """All values greater than or equal the given value."""
  surveyComment_gte: String

  """All values containing the given string."""
  surveyComment_contains: String

  """All values not containing the given string."""
  surveyComment_not_contains: String

  """All values starting with the given string."""
  surveyComment_starts_with: String

  """All values not starting with the given string."""
  surveyComment_not_starts_with: String

  """All values ending with the given string."""
  surveyComment_ends_with: String

  """All values not ending with the given string."""
  surveyComment_not_ends_with: String
  accident: AccidentWhereInput
  incidentals_every: IncidentalWhereInput
  incidentals_some: IncidentalWhereInput
  incidentals_none: IncidentalWhereInput
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
  evidences_every: EvidenceWhereInput
  evidences_some: EvidenceWhereInput
  evidences_none: EvidenceWhereInput
  assignedAdmin: AdminWhereInput
  submittedByAdmin: AdminWhereInput
}

input ConfirmDropoffInput {
  rentalId: ID!
  isDamaged: Boolean!
  surveyComment: String
}

type ConfirmDropoffPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rental: Rental
}

input ConfirmPickupInput {
  rentalId: ID!
  carBackImage: Upload!
  carFrontImage: Upload!
  carGasLevelImage: Upload!
  carMileageImage: Upload!
  carPassengerSideImage: Upload!
  carDriverSideImage: Upload!
  isDriverIdentified: Boolean!
}

type ConfirmPickupPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rental: Rental
}

type Coupon implements Node {
  legacyId: Int
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  discountInCents: Int
  isBgc: Boolean
  isDeposit: Boolean
  isDollar: Boolean
  isLateFee: Boolean
  limit: Int!
  backgroundCheckPayments(where: BackgroundCheckPaymentWhereInput, orderBy: BackgroundCheckPaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BackgroundCheckPayment!]
  deposits(where: DepositWhereInput, orderBy: DepositOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Deposit!]
  rentalPayments(where: RentalPaymentWhereInput, orderBy: RentalPaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalPayment!]
  rentalLateFees(where: RentalLateFeePaymentWhereInput, orderBy: RentalLateFeePaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalLateFeePayment!]
}

input CouponWhereInput {
  """Logical AND on all given filters."""
  AND: [CouponWhereInput!]

  """Logical OR on all given filters."""
  OR: [CouponWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CouponWhereInput!]
  legacyId: Int

  """All values that are not equal to given value."""
  legacyId_not: Int

  """All values that are contained in given list."""
  legacyId_in: [Int!]

  """All values that are not contained in given list."""
  legacyId_not_in: [Int!]

  """All values less than the given value."""
  legacyId_lt: Int

  """All values less than or equal the given value."""
  legacyId_lte: Int

  """All values greater than the given value."""
  legacyId_gt: Int

  """All values greater than or equal the given value."""
  legacyId_gte: Int
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  discountInCents: Int

  """All values that are not equal to given value."""
  discountInCents_not: Int

  """All values that are contained in given list."""
  discountInCents_in: [Int!]

  """All values that are not contained in given list."""
  discountInCents_not_in: [Int!]

  """All values less than the given value."""
  discountInCents_lt: Int

  """All values less than or equal the given value."""
  discountInCents_lte: Int

  """All values greater than the given value."""
  discountInCents_gt: Int

  """All values greater than or equal the given value."""
  discountInCents_gte: Int
  isBgc: Boolean

  """All values that are not equal to given value."""
  isBgc_not: Boolean
  isDeposit: Boolean

  """All values that are not equal to given value."""
  isDeposit_not: Boolean
  isDollar: Boolean

  """All values that are not equal to given value."""
  isDollar_not: Boolean
  isLateFee: Boolean

  """All values that are not equal to given value."""
  isLateFee_not: Boolean
  limit: Int

  """All values that are not equal to given value."""
  limit_not: Int

  """All values that are contained in given list."""
  limit_in: [Int!]

  """All values that are not contained in given list."""
  limit_not_in: [Int!]

  """All values less than the given value."""
  limit_lt: Int

  """All values less than or equal the given value."""
  limit_lte: Int

  """All values greater than the given value."""
  limit_gt: Int

  """All values greater than or equal the given value."""
  limit_gte: Int
  backgroundCheckPayments_every: BackgroundCheckPaymentWhereInput
  backgroundCheckPayments_some: BackgroundCheckPaymentWhereInput
  backgroundCheckPayments_none: BackgroundCheckPaymentWhereInput
  deposits_every: DepositWhereInput
  deposits_some: DepositWhereInput
  deposits_none: DepositWhereInput
  rentalPayments_every: RentalPaymentWhereInput
  rentalPayments_some: RentalPaymentWhereInput
  rentalPayments_none: RentalPaymentWhereInput
  rentalLateFees_every: RentalLateFeePaymentWhereInput
  rentalLateFees_some: RentalLateFeePaymentWhereInput
  rentalLateFees_none: RentalLateFeePaymentWhereInput
}

input CreateClaimEvidenceInput {
  claimId: ID!
  evidenceType: EvidenceType
  evidenceFileType: EvidenceFileType
  evidenceFile: Upload!
}

type CreateClaimEvidencePayload {
  code: String
  success: Boolean
  message: String
  evidence: Evidence
}

enum DamageLocation {
  FRONT_BUMPER
  LEFT_ROCKER_PANEL
  LEFT_FRONT_BUMPER_CORNER
  RIGHT_ROCKER_PANEL
  HOOD
  LEFT_REAR_DOOR
  RIGHT_FRONT_BUMPER_CORNER
  RIGHT_REAR_DOOR
  LEFT_FRONT_WHEEL
  LEFT_REAR_WHEEL
  RIGHT_FRONT_WHEEL
  RIGHT_REAR_WHEEL
  LEFT_FENDER
  LEFT_QUARTER_PANEL
  RIGHT_FENDER
  RIGHT_QUARTER_PANEL
  LEFT_FRONT_DOOR
  LEFT_REAR_CORNER_BUMPER
  RIGHT_FRONT_DOOR
  RIGHT_REAR_CORNER_BUMPER
  LEFT_MIRROR
  TRUNK
  RIGHT_MIRROR
  REAR_BUMPER
  LEFT_ROOF_RAIL
  SPOILER
  RIGHT_ROOF_RAIL
  WHEEL
  ENGINE
  RIGHT_TAIL_LIGHT
  LEFT_TAIL_LIGHT
  RIGHT_HEADLIGHT
  LEFT_HEADLIGHT
}

enum DamageType {
  STOLEN
  TOTAL
  NA
}

scalar DateTime

type Deposit {
  amountWithheldInCents: Int!
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  chargeId: String
  rentalId: ID
  isHeld: Boolean
  isRefunded: Boolean!
  charge: StripeCharge
  paymentAccount: PaymentAccount
  coupon: Coupon
  statement: ClaimStatement
  rental: Rental
}

enum DepositOrderByInput {
  amountWithheldInCents_ASC
  amountWithheldInCents_DESC
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  chargeId_ASC
  chargeId_DESC
  rentalId_ASC
  rentalId_DESC
  isHeld_ASC
  isHeld_DESC
  isRefunded_ASC
  isRefunded_DESC
  isUsed_ASC
  isUsed_DESC
}

input DepositWhereInput {
  """Logical AND on all given filters."""
  AND: [DepositWhereInput!]

  """Logical OR on all given filters."""
  OR: [DepositWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DepositWhereInput!]
  amountWithheldInCents: Int

  """All values that are not equal to given value."""
  amountWithheldInCents_not: Int

  """All values that are contained in given list."""
  amountWithheldInCents_in: [Int!]

  """All values that are not contained in given list."""
  amountWithheldInCents_not_in: [Int!]

  """All values less than the given value."""
  amountWithheldInCents_lt: Int

  """All values less than or equal the given value."""
  amountWithheldInCents_lte: Int

  """All values greater than the given value."""
  amountWithheldInCents_gt: Int

  """All values greater than or equal the given value."""
  amountWithheldInCents_gte: Int
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  chargeId: String

  """All values that are not equal to given value."""
  chargeId_not: String

  """All values that are contained in given list."""
  chargeId_in: [String!]

  """All values that are not contained in given list."""
  chargeId_not_in: [String!]

  """All values less than the given value."""
  chargeId_lt: String

  """All values less than or equal the given value."""
  chargeId_lte: String

  """All values greater than the given value."""
  chargeId_gt: String

  """All values greater than or equal the given value."""
  chargeId_gte: String

  """All values containing the given string."""
  chargeId_contains: String

  """All values not containing the given string."""
  chargeId_not_contains: String

  """All values starting with the given string."""
  chargeId_starts_with: String

  """All values not starting with the given string."""
  chargeId_not_starts_with: String

  """All values ending with the given string."""
  chargeId_ends_with: String

  """All values not ending with the given string."""
  chargeId_not_ends_with: String
  rentalId: ID

  """All values that are not equal to given value."""
  rentalId_not: ID

  """All values that are contained in given list."""
  rentalId_in: [ID!]

  """All values that are not contained in given list."""
  rentalId_not_in: [ID!]

  """All values less than the given value."""
  rentalId_lt: ID

  """All values less than or equal the given value."""
  rentalId_lte: ID

  """All values greater than the given value."""
  rentalId_gt: ID

  """All values greater than or equal the given value."""
  rentalId_gte: ID

  """All values containing the given string."""
  rentalId_contains: ID

  """All values not containing the given string."""
  rentalId_not_contains: ID

  """All values starting with the given string."""
  rentalId_starts_with: ID

  """All values not starting with the given string."""
  rentalId_not_starts_with: ID

  """All values ending with the given string."""
  rentalId_ends_with: ID

  """All values not ending with the given string."""
  rentalId_not_ends_with: ID
  isHeld: Boolean

  """All values that are not equal to given value."""
  isHeld_not: Boolean
  isRefunded: Boolean

  """All values that are not equal to given value."""
  isRefunded_not: Boolean
  isUsed: Boolean

  """All values that are not equal to given value."""
  isUsed_not: Boolean
  paymentAccount: PaymentAccountWhereInput
  coupon: CouponWhereInput
  statement: ClaimStatementWhereInput
}

type Driver {
  aboutMe: String
  id: ID!
  legacyId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
  blockedFromBooking: Boolean
  legalInfo: DriverLegalInfo
  user: User
  backgroundCheck: BackgroundCheck
  licensePhotoId: ID
  requiresTncAcceptance: Boolean
  claims(filter: ClaimWhereInput, orderBy: ClaimOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Claim!]
  claimsConnection(filter: ClaimWhereInput, orderBy: ClaimOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ClaimConnection
  driverClaimsMeta: DriverClaimsMeta
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminNoteConnection
  rentals(filter: RentalWhereInput, orderBy: RentalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalConnection!
  licensePhoto: File
  ratings(filter: RatingWhereInput, orderBy: RatingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RatingConnection!
  driverRatingsMeta: DriverRatingsMeta
}

type DriverClaimsMeta {
  rentalWithClaimsCount: Int
  totalAccidents: Int
  totalIncidents: Int
  totalClaims: Int
}

type DriverLegalInfo {
  driver: Driver
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  dob: DateTime
  licensePhotoId: ID @deprecated
  legalFirstName: String
  legalLastName: String
  legalMiddleName: String
  licenseNumber: String
  licenseState: String
  licenseExpirationDate: DateTime
  fullName: String
  licensePhoto: File
}

input DriverLegalInfoWhereInput {
  """Logical AND on all given filters."""
  AND: [DriverLegalInfoWhereInput!]

  """Logical OR on all given filters."""
  OR: [DriverLegalInfoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DriverLegalInfoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  licensePhotoId: ID

  """All values that are not equal to given value."""
  licensePhotoId_not: ID

  """All values that are contained in given list."""
  licensePhotoId_in: [ID!]

  """All values that are not contained in given list."""
  licensePhotoId_not_in: [ID!]

  """All values less than the given value."""
  licensePhotoId_lt: ID

  """All values less than or equal the given value."""
  licensePhotoId_lte: ID

  """All values greater than the given value."""
  licensePhotoId_gt: ID

  """All values greater than or equal the given value."""
  licensePhotoId_gte: ID

  """All values containing the given string."""
  licensePhotoId_contains: ID

  """All values not containing the given string."""
  licensePhotoId_not_contains: ID

  """All values starting with the given string."""
  licensePhotoId_starts_with: ID

  """All values not starting with the given string."""
  licensePhotoId_not_starts_with: ID

  """All values ending with the given string."""
  licensePhotoId_ends_with: ID

  """All values not ending with the given string."""
  licensePhotoId_not_ends_with: ID
  licenseExpirationDate: DateTime

  """All values that are not equal to given value."""
  licenseExpirationDate_not: DateTime

  """All values that are contained in given list."""
  licenseExpirationDate_in: [DateTime!]

  """All values that are not contained in given list."""
  licenseExpirationDate_not_in: [DateTime!]

  """All values less than the given value."""
  licenseExpirationDate_lt: DateTime

  """All values less than or equal the given value."""
  licenseExpirationDate_lte: DateTime

  """All values greater than the given value."""
  licenseExpirationDate_gt: DateTime

  """All values greater than or equal the given value."""
  licenseExpirationDate_gte: DateTime
  driver: DriverWhereInput
}

type DriverRatingsMeta {
  totalRatings: Int
  avgRating: Float
}

enum DriverVerificationStatusEnum {
  NOTAPPLIED
  APPLIED
  VERIFIED
  REJECTED
  UNRESPONSIVE
}

input DriverWhereInput {
  """Logical AND on all given filters."""
  AND: [DriverWhereInput!]

  """Logical OR on all given filters."""
  OR: [DriverWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DriverWhereInput!]
  aboutMe: String

  """All values that are not equal to given value."""
  aboutMe_not: String

  """All values that are contained in given list."""
  aboutMe_in: [String!]

  """All values that are not contained in given list."""
  aboutMe_not_in: [String!]

  """All values less than the given value."""
  aboutMe_lt: String

  """All values less than or equal the given value."""
  aboutMe_lte: String

  """All values greater than the given value."""
  aboutMe_gt: String

  """All values greater than or equal the given value."""
  aboutMe_gte: String

  """All values containing the given string."""
  aboutMe_contains: String

  """All values not containing the given string."""
  aboutMe_not_contains: String

  """All values starting with the given string."""
  aboutMe_starts_with: String

  """All values not starting with the given string."""
  aboutMe_not_starts_with: String

  """All values ending with the given string."""
  aboutMe_ends_with: String

  """All values not ending with the given string."""
  aboutMe_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  legacyId: ID

  """All values that are not equal to given value."""
  legacyId_not: ID

  """All values that are contained in given list."""
  legacyId_in: [ID!]

  """All values that are not contained in given list."""
  legacyId_not_in: [ID!]

  """All values less than the given value."""
  legacyId_lt: ID

  """All values less than or equal the given value."""
  legacyId_lte: ID

  """All values greater than the given value."""
  legacyId_gt: ID

  """All values greater than or equal the given value."""
  legacyId_gte: ID

  """All values containing the given string."""
  legacyId_contains: ID

  """All values not containing the given string."""
  legacyId_not_contains: ID

  """All values starting with the given string."""
  legacyId_starts_with: ID

  """All values not starting with the given string."""
  legacyId_not_starts_with: ID

  """All values ending with the given string."""
  legacyId_ends_with: ID

  """All values not ending with the given string."""
  legacyId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  blockedFromBooking: Boolean

  """All values that are not equal to given value."""
  blockedFromBooking_not: Boolean
  legalInfo: DriverLegalInfoWhereInput
  user: UserWhereInput
  backgroundCheck: BackgroundCheckWhereInput
}

input DuplicateCarInput {
  carId: ID!
}

type Evidence implements Node {
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  claim(where: ClaimWhereInput): Claim
  fileId: ID!
  fileType: EvidenceFileType
  type: EvidenceType
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  file: File
}

enum EvidenceFileType {
  DOCUMENT
  IMAGE
}

enum EvidenceOrderByInput {
  fileId_ASC
  fileId_DESC
  fileType_ASC
  fileType_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum EvidenceType {
  INCIDENTAL
  ACCIDENT
}

input EvidenceWhereInput {
  """Logical AND on all given filters."""
  AND: [EvidenceWhereInput!]

  """Logical OR on all given filters."""
  OR: [EvidenceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EvidenceWhereInput!]
  fileId: ID

  """All values that are not equal to given value."""
  fileId_not: ID

  """All values that are contained in given list."""
  fileId_in: [ID!]

  """All values that are not contained in given list."""
  fileId_not_in: [ID!]

  """All values less than the given value."""
  fileId_lt: ID

  """All values less than or equal the given value."""
  fileId_lte: ID

  """All values greater than the given value."""
  fileId_gt: ID

  """All values greater than or equal the given value."""
  fileId_gte: ID

  """All values containing the given string."""
  fileId_contains: ID

  """All values not containing the given string."""
  fileId_not_contains: ID

  """All values starting with the given string."""
  fileId_starts_with: ID

  """All values not starting with the given string."""
  fileId_not_starts_with: ID

  """All values ending with the given string."""
  fileId_ends_with: ID

  """All values not ending with the given string."""
  fileId_not_ends_with: ID
  fileType: EvidenceFileType

  """All values that are not equal to given value."""
  fileType_not: EvidenceFileType

  """All values that are contained in given list."""
  fileType_in: [EvidenceFileType!]

  """All values that are not contained in given list."""
  fileType_not_in: [EvidenceFileType!]
  type: EvidenceType

  """All values that are not equal to given value."""
  type_not: EvidenceType

  """All values that are contained in given list."""
  type_in: [EvidenceType!]

  """All values that are not contained in given list."""
  type_not_in: [EvidenceType!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
  claim: ClaimWhereInput
}

input ExtendRentalInput {
  rentalId: ID!
  rentalDays: Int!
  couponCode: String
}

type ExtendRentalPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rentalPeriod: RentalPeriod
}

type FactOfLoss implements Node {
  accident(where: AccidentWhereInput): Accident
  damageType: DamageType
  dateOfIncident: DateTime
  description: String
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  involvedParty(where: InvolvedPartyWhereInput): InvolvedParty
  policeReport(where: PoliceReportWhereInput): PoliceReport
}

input FactOfLossWhereInput {
  """Logical AND on all given filters."""
  AND: [FactOfLossWhereInput!]

  """Logical OR on all given filters."""
  OR: [FactOfLossWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FactOfLossWhereInput!]
  damageType: DamageType

  """All values that are not equal to given value."""
  damageType_not: DamageType

  """All values that are contained in given list."""
  damageType_in: [DamageType!]

  """All values that are not contained in given list."""
  damageType_not_in: [DamageType!]
  dateOfIncident: DateTime

  """All values that are not equal to given value."""
  dateOfIncident_not: DateTime

  """All values that are contained in given list."""
  dateOfIncident_in: [DateTime!]

  """All values that are not contained in given list."""
  dateOfIncident_not_in: [DateTime!]

  """All values less than the given value."""
  dateOfIncident_lt: DateTime

  """All values less than or equal the given value."""
  dateOfIncident_lte: DateTime

  """All values greater than the given value."""
  dateOfIncident_gt: DateTime

  """All values greater than or equal the given value."""
  dateOfIncident_gte: DateTime
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  accident: AccidentWhereInput
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
  involvedParty: InvolvedPartyWhereInput
  policeReport: PoliceReportWhereInput
}

type File implements Node {
  id: ID!
  name: String!
  size: Int
  secret: String
  contentType: String
  createdAt: DateTime!
  updatedAt: DateTime!
  type: FileTypeEnum!
  path: String!
  thumbnailPath: String
  url(where: FileUrlWhereInput): String
  thumbnailUrl: String
}

enum FileTypeEnum {
  PROFILE_PHOTO
  LICENSE_PHOTO
  RENTAL_CONTRACT
  RENTAL_INSURANCE
  CAR_PHOTO
  CAR_PICKUP
  CAR_DOCUMENT
  CAR_REGISTRATION_FILE
  UBER_LYFT_INSPECTION_FILE
  PERSONAL_INSURANCE_FILE
  CLAIM_EVIDENCE_FILE
}

input FileUrlWhereInput {
  s3: Boolean
}

type GeoState {
  id: ID
  code: String
  state: String
}

type Incidental implements Node {
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  comment: String
  claim(where: ClaimWhereInput): Claim
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  claimAmount: Float
  approvedAmount: Float
  type: IncidentalType!
  meta: Json
}

enum IncidentalOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  comment_ASC
  comment_DESC
  claimAmount_ASC
  claimAmount_DESC
  approvedAmount_ASC
  approvedAmount_DESC
  type_ASC
  type_DESC
  meta_ASC
  meta_DESC
}

enum IncidentalType {
  MINOR_DAMAGE
  CLEANING
  GAS
  LATE
  TICKET
  TOLL
  MILEAGE
  OTHER
}

input IncidentalWhereInput {
  """Logical AND on all given filters."""
  AND: [IncidentalWhereInput!]

  """Logical OR on all given filters."""
  OR: [IncidentalWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [IncidentalWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  comment: String

  """All values that are not equal to given value."""
  comment_not: String

  """All values that are contained in given list."""
  comment_in: [String!]

  """All values that are not contained in given list."""
  comment_not_in: [String!]

  """All values less than the given value."""
  comment_lt: String

  """All values less than or equal the given value."""
  comment_lte: String

  """All values greater than the given value."""
  comment_gt: String

  """All values greater than or equal the given value."""
  comment_gte: String

  """All values containing the given string."""
  comment_contains: String

  """All values not containing the given string."""
  comment_not_contains: String

  """All values starting with the given string."""
  comment_starts_with: String

  """All values not starting with the given string."""
  comment_not_starts_with: String

  """All values ending with the given string."""
  comment_ends_with: String

  """All values not ending with the given string."""
  comment_not_ends_with: String
  claimAmount: Float

  """All values that are not equal to given value."""
  claimAmount_not: Float

  """All values that are contained in given list."""
  claimAmount_in: [Float!]

  """All values that are not contained in given list."""
  claimAmount_not_in: [Float!]

  """All values less than the given value."""
  claimAmount_lt: Float

  """All values less than or equal the given value."""
  claimAmount_lte: Float

  """All values greater than the given value."""
  claimAmount_gt: Float

  """All values greater than or equal the given value."""
  claimAmount_gte: Float
  approvedAmount: Float

  """All values that are not equal to given value."""
  approvedAmount_not: Float

  """All values that are contained in given list."""
  approvedAmount_in: [Float!]

  """All values that are not contained in given list."""
  approvedAmount_not_in: [Float!]

  """All values less than the given value."""
  approvedAmount_lt: Float

  """All values less than or equal the given value."""
  approvedAmount_lte: Float

  """All values greater than the given value."""
  approvedAmount_gt: Float

  """All values greater than or equal the given value."""
  approvedAmount_gte: Float
  type: IncidentalType

  """All values that are not equal to given value."""
  type_not: IncidentalType

  """All values that are contained in given list."""
  type_in: [IncidentalType!]

  """All values that are not contained in given list."""
  type_not_in: [IncidentalType!]
  claim: ClaimWhereInput
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
}

type Insurance implements Node {
  id: ID!
  rentalId: ID!
  carId: ID!
  contractId: ID
  vin: String
  applicationId: String
  insuranceCardImageId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
  status: InsuranceStatus!
  startDateTime: DateTime
  endDateTime: DateTime
  pre(where: PreInsuranceWhereInput): PreInsurance
  post(where: PostInsuranceWhereInput): PostInsurance
  rental: Rental
  car: Car
  insuranceCardImage: File
  claim: Claim
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminNoteConnection
}

"""A connection to a list of items."""
type InsuranceConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [InsuranceEdge]!
  aggregate: AggregateInsurance!
}

"""An edge in a connection."""
type InsuranceEdge {
  """The item at the end of the edge."""
  node: Insurance!

  """A cursor for use in pagination."""
  cursor: String!
}

enum InsuranceOrderByInput {
  id_ASC
  id_DESC
  rentalId_ASC
  rentalId_DESC
  carId_ASC
  carId_DESC
  contractId_ASC
  contractId_DESC
  vin_ASC
  vin_DESC
  applicationId_ASC
  applicationId_DESC
  insuranceCardImageId_ASC
  insuranceCardImageId_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  status_ASC
  status_DESC
  startDateTime_ASC
  startDateTime_DESC
  endDateTime_ASC
  endDateTime_DESC
}

enum InsuranceStatus {
  ACTIVE
  CANCELED
  CLOSED
}

input InsuranceWhereInput {
  """Logical AND on all given filters."""
  AND: [InsuranceWhereInput!]

  """Logical OR on all given filters."""
  OR: [InsuranceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InsuranceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  rentalId: ID

  """All values that are not equal to given value."""
  rentalId_not: ID

  """All values that are contained in given list."""
  rentalId_in: [ID!]

  """All values that are not contained in given list."""
  rentalId_not_in: [ID!]

  """All values less than the given value."""
  rentalId_lt: ID

  """All values less than or equal the given value."""
  rentalId_lte: ID

  """All values greater than the given value."""
  rentalId_gt: ID

  """All values greater than or equal the given value."""
  rentalId_gte: ID

  """All values containing the given string."""
  rentalId_contains: ID

  """All values not containing the given string."""
  rentalId_not_contains: ID

  """All values starting with the given string."""
  rentalId_starts_with: ID

  """All values not starting with the given string."""
  rentalId_not_starts_with: ID

  """All values ending with the given string."""
  rentalId_ends_with: ID

  """All values not ending with the given string."""
  rentalId_not_ends_with: ID
  carId: ID

  """All values that are not equal to given value."""
  carId_not: ID

  """All values that are contained in given list."""
  carId_in: [ID!]

  """All values that are not contained in given list."""
  carId_not_in: [ID!]

  """All values less than the given value."""
  carId_lt: ID

  """All values less than or equal the given value."""
  carId_lte: ID

  """All values greater than the given value."""
  carId_gt: ID

  """All values greater than or equal the given value."""
  carId_gte: ID

  """All values containing the given string."""
  carId_contains: ID

  """All values not containing the given string."""
  carId_not_contains: ID

  """All values starting with the given string."""
  carId_starts_with: ID

  """All values not starting with the given string."""
  carId_not_starts_with: ID

  """All values ending with the given string."""
  carId_ends_with: ID

  """All values not ending with the given string."""
  carId_not_ends_with: ID
  contractId: ID

  """All values that are not equal to given value."""
  contractId_not: ID

  """All values that are contained in given list."""
  contractId_in: [ID!]

  """All values that are not contained in given list."""
  contractId_not_in: [ID!]

  """All values less than the given value."""
  contractId_lt: ID

  """All values less than or equal the given value."""
  contractId_lte: ID

  """All values greater than the given value."""
  contractId_gt: ID

  """All values greater than or equal the given value."""
  contractId_gte: ID

  """All values containing the given string."""
  contractId_contains: ID

  """All values not containing the given string."""
  contractId_not_contains: ID

  """All values starting with the given string."""
  contractId_starts_with: ID

  """All values not starting with the given string."""
  contractId_not_starts_with: ID

  """All values ending with the given string."""
  contractId_ends_with: ID

  """All values not ending with the given string."""
  contractId_not_ends_with: ID
  vin: String

  """All values that are not equal to given value."""
  vin_not: String

  """All values that are contained in given list."""
  vin_in: [String!]

  """All values that are not contained in given list."""
  vin_not_in: [String!]

  """All values less than the given value."""
  vin_lt: String

  """All values less than or equal the given value."""
  vin_lte: String

  """All values greater than the given value."""
  vin_gt: String

  """All values greater than or equal the given value."""
  vin_gte: String

  """All values containing the given string."""
  vin_contains: String

  """All values not containing the given string."""
  vin_not_contains: String

  """All values starting with the given string."""
  vin_starts_with: String

  """All values not starting with the given string."""
  vin_not_starts_with: String

  """All values ending with the given string."""
  vin_ends_with: String

  """All values not ending with the given string."""
  vin_not_ends_with: String
  applicationId: String

  """All values that are not equal to given value."""
  applicationId_not: String

  """All values that are contained in given list."""
  applicationId_in: [String!]

  """All values that are not contained in given list."""
  applicationId_not_in: [String!]

  """All values less than the given value."""
  applicationId_lt: String

  """All values less than or equal the given value."""
  applicationId_lte: String

  """All values greater than the given value."""
  applicationId_gt: String

  """All values greater than or equal the given value."""
  applicationId_gte: String

  """All values containing the given string."""
  applicationId_contains: String

  """All values not containing the given string."""
  applicationId_not_contains: String

  """All values starting with the given string."""
  applicationId_starts_with: String

  """All values not starting with the given string."""
  applicationId_not_starts_with: String

  """All values ending with the given string."""
  applicationId_ends_with: String

  """All values not ending with the given string."""
  applicationId_not_ends_with: String
  insuranceCardImageId: ID

  """All values that are not equal to given value."""
  insuranceCardImageId_not: ID

  """All values that are contained in given list."""
  insuranceCardImageId_in: [ID!]

  """All values that are not contained in given list."""
  insuranceCardImageId_not_in: [ID!]

  """All values less than the given value."""
  insuranceCardImageId_lt: ID

  """All values less than or equal the given value."""
  insuranceCardImageId_lte: ID

  """All values greater than the given value."""
  insuranceCardImageId_gt: ID

  """All values greater than or equal the given value."""
  insuranceCardImageId_gte: ID

  """All values containing the given string."""
  insuranceCardImageId_contains: ID

  """All values not containing the given string."""
  insuranceCardImageId_not_contains: ID

  """All values starting with the given string."""
  insuranceCardImageId_starts_with: ID

  """All values not starting with the given string."""
  insuranceCardImageId_not_starts_with: ID

  """All values ending with the given string."""
  insuranceCardImageId_ends_with: ID

  """All values not ending with the given string."""
  insuranceCardImageId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  status: InsuranceStatus

  """All values that are not equal to given value."""
  status_not: InsuranceStatus

  """All values that are contained in given list."""
  status_in: [InsuranceStatus!]

  """All values that are not contained in given list."""
  status_not_in: [InsuranceStatus!]
  startDateTime: DateTime

  """All values that are not equal to given value."""
  startDateTime_not: DateTime

  """All values that are contained in given list."""
  startDateTime_in: [DateTime!]

  """All values that are not contained in given list."""
  startDateTime_not_in: [DateTime!]

  """All values less than the given value."""
  startDateTime_lt: DateTime

  """All values less than or equal the given value."""
  startDateTime_lte: DateTime

  """All values greater than the given value."""
  startDateTime_gt: DateTime

  """All values greater than or equal the given value."""
  startDateTime_gte: DateTime
  endDateTime: DateTime

  """All values that are not equal to given value."""
  endDateTime_not: DateTime

  """All values that are contained in given list."""
  endDateTime_in: [DateTime!]

  """All values that are not contained in given list."""
  endDateTime_not_in: [DateTime!]

  """All values less than the given value."""
  endDateTime_lt: DateTime

  """All values less than or equal the given value."""
  endDateTime_lte: DateTime

  """All values greater than the given value."""
  endDateTime_gt: DateTime

  """All values greater than or equal the given value."""
  endDateTime_gte: DateTime
  pre: PreInsuranceWhereInput
  post: PostInsuranceWhereInput
}

type InvolvedParty implements Node {
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  claimNumber: String
  factOfLoss(where: FactOfLossWhereInput): FactOfLoss
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  insuranceCarrier: String
  policyNumber: String
  type: InvolvedPartyType!
  comment: String
  adjustorInfo: String
  name: String
  email: String
  phoneNumber: String
}

enum InvolvedPartyType {
  WITNESS
  CLAIMANT
  ADVERSE_PARTY
  INSURANCE_AGENT
  LAWYER
}

input InvolvedPartyWhereInput {
  """Logical AND on all given filters."""
  AND: [InvolvedPartyWhereInput!]

  """Logical OR on all given filters."""
  OR: [InvolvedPartyWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InvolvedPartyWhereInput!]
  claimNumber: String

  """All values that are not equal to given value."""
  claimNumber_not: String

  """All values that are contained in given list."""
  claimNumber_in: [String!]

  """All values that are not contained in given list."""
  claimNumber_not_in: [String!]

  """All values less than the given value."""
  claimNumber_lt: String

  """All values less than or equal the given value."""
  claimNumber_lte: String

  """All values greater than the given value."""
  claimNumber_gt: String

  """All values greater than or equal the given value."""
  claimNumber_gte: String

  """All values containing the given string."""
  claimNumber_contains: String

  """All values not containing the given string."""
  claimNumber_not_contains: String

  """All values starting with the given string."""
  claimNumber_starts_with: String

  """All values not starting with the given string."""
  claimNumber_not_starts_with: String

  """All values ending with the given string."""
  claimNumber_ends_with: String

  """All values not ending with the given string."""
  claimNumber_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  insuranceCarrier: String

  """All values that are not equal to given value."""
  insuranceCarrier_not: String

  """All values that are contained in given list."""
  insuranceCarrier_in: [String!]

  """All values that are not contained in given list."""
  insuranceCarrier_not_in: [String!]

  """All values less than the given value."""
  insuranceCarrier_lt: String

  """All values less than or equal the given value."""
  insuranceCarrier_lte: String

  """All values greater than the given value."""
  insuranceCarrier_gt: String

  """All values greater than or equal the given value."""
  insuranceCarrier_gte: String

  """All values containing the given string."""
  insuranceCarrier_contains: String

  """All values not containing the given string."""
  insuranceCarrier_not_contains: String

  """All values starting with the given string."""
  insuranceCarrier_starts_with: String

  """All values not starting with the given string."""
  insuranceCarrier_not_starts_with: String

  """All values ending with the given string."""
  insuranceCarrier_ends_with: String

  """All values not ending with the given string."""
  insuranceCarrier_not_ends_with: String
  policyNumber: String

  """All values that are not equal to given value."""
  policyNumber_not: String

  """All values that are contained in given list."""
  policyNumber_in: [String!]

  """All values that are not contained in given list."""
  policyNumber_not_in: [String!]

  """All values less than the given value."""
  policyNumber_lt: String

  """All values less than or equal the given value."""
  policyNumber_lte: String

  """All values greater than the given value."""
  policyNumber_gt: String

  """All values greater than or equal the given value."""
  policyNumber_gte: String

  """All values containing the given string."""
  policyNumber_contains: String

  """All values not containing the given string."""
  policyNumber_not_contains: String

  """All values starting with the given string."""
  policyNumber_starts_with: String

  """All values not starting with the given string."""
  policyNumber_not_starts_with: String

  """All values ending with the given string."""
  policyNumber_ends_with: String

  """All values not ending with the given string."""
  policyNumber_not_ends_with: String
  type: InvolvedPartyType

  """All values that are not equal to given value."""
  type_not: InvolvedPartyType

  """All values that are contained in given list."""
  type_in: [InvolvedPartyType!]

  """All values that are not contained in given list."""
  type_not_in: [InvolvedPartyType!]
  comment: String

  """All values that are not equal to given value."""
  comment_not: String

  """All values that are contained in given list."""
  comment_in: [String!]

  """All values that are not contained in given list."""
  comment_not_in: [String!]

  """All values less than the given value."""
  comment_lt: String

  """All values less than or equal the given value."""
  comment_lte: String

  """All values greater than the given value."""
  comment_gt: String

  """All values greater than or equal the given value."""
  comment_gte: String

  """All values containing the given string."""
  comment_contains: String

  """All values not containing the given string."""
  comment_not_contains: String

  """All values starting with the given string."""
  comment_starts_with: String

  """All values not starting with the given string."""
  comment_not_starts_with: String

  """All values ending with the given string."""
  comment_ends_with: String

  """All values not ending with the given string."""
  comment_not_ends_with: String
  adjustorInfo: String

  """All values that are not equal to given value."""
  adjustorInfo_not: String

  """All values that are contained in given list."""
  adjustorInfo_in: [String!]

  """All values that are not contained in given list."""
  adjustorInfo_not_in: [String!]

  """All values less than the given value."""
  adjustorInfo_lt: String

  """All values less than or equal the given value."""
  adjustorInfo_lte: String

  """All values greater than the given value."""
  adjustorInfo_gt: String

  """All values greater than or equal the given value."""
  adjustorInfo_gte: String

  """All values containing the given string."""
  adjustorInfo_contains: String

  """All values not containing the given string."""
  adjustorInfo_not_contains: String

  """All values starting with the given string."""
  adjustorInfo_starts_with: String

  """All values not starting with the given string."""
  adjustorInfo_not_starts_with: String

  """All values ending with the given string."""
  adjustorInfo_ends_with: String

  """All values not ending with the given string."""
  adjustorInfo_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  phoneNumber: String

  """All values that are not equal to given value."""
  phoneNumber_not: String

  """All values that are contained in given list."""
  phoneNumber_in: [String!]

  """All values that are not contained in given list."""
  phoneNumber_not_in: [String!]

  """All values less than the given value."""
  phoneNumber_lt: String

  """All values less than or equal the given value."""
  phoneNumber_lte: String

  """All values greater than the given value."""
  phoneNumber_gt: String

  """All values greater than or equal the given value."""
  phoneNumber_gte: String

  """All values containing the given string."""
  phoneNumber_contains: String

  """All values not containing the given string."""
  phoneNumber_not_contains: String

  """All values starting with the given string."""
  phoneNumber_starts_with: String

  """All values not starting with the given string."""
  phoneNumber_not_starts_with: String

  """All values ending with the given string."""
  phoneNumber_ends_with: String

  """All values not ending with the given string."""
  phoneNumber_not_ends_with: String
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
  factOfLoss: FactOfLossWhereInput
}

"""Raw JSON value"""
scalar Json

input ListCarInput {
  city: String!
  state: String!
  street: String!
  zip: String!
  pickupLat: Float!
  pickupLng: Float!
  description: String
  vin: String!
  makeId: String!
  modelId: String!
  yearId: String!
  mileage: Int!
  maxDailyMiles: Int!
  dailyPriceInCents: Int!
  weeklyPriceInCents: Int!
  monthlyPriceInCents: Int!
  licensePlate: String!
  registrationExpirationAt: DateTime!
  photos: [Upload!]!
  registrationFile: Upload!
  uberLyftInspectionFile: Upload
  personalInsuranceFile: Upload
}

type ListCarPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  car: Car
}

type Location implements Node {
  accident(where: AccidentWhereInput): Accident
  city: String!
  id: ID!
  lat: Float
  lng: Float
  state: String!
  street: String!
  zip: String!
}

input LocationWhereInput {
  """Logical AND on all given filters."""
  AND: [LocationWhereInput!]

  """Logical OR on all given filters."""
  OR: [LocationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [LocationWhereInput!]
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  lat: Float

  """All values that are not equal to given value."""
  lat_not: Float

  """All values that are contained in given list."""
  lat_in: [Float!]

  """All values that are not contained in given list."""
  lat_not_in: [Float!]

  """All values less than the given value."""
  lat_lt: Float

  """All values less than or equal the given value."""
  lat_lte: Float

  """All values greater than the given value."""
  lat_gt: Float

  """All values greater than or equal the given value."""
  lat_gte: Float
  lng: Float

  """All values that are not equal to given value."""
  lng_not: Float

  """All values that are contained in given list."""
  lng_in: [Float!]

  """All values that are not contained in given list."""
  lng_not_in: [Float!]

  """All values less than the given value."""
  lng_lt: Float

  """All values less than or equal the given value."""
  lng_lte: Float

  """All values greater than the given value."""
  lng_gt: Float

  """All values greater than or equal the given value."""
  lng_gte: Float
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  street: String

  """All values that are not equal to given value."""
  street_not: String

  """All values that are contained in given list."""
  street_in: [String!]

  """All values that are not contained in given list."""
  street_not_in: [String!]

  """All values less than the given value."""
  street_lt: String

  """All values less than or equal the given value."""
  street_lte: String

  """All values greater than the given value."""
  street_gt: String

  """All values greater than or equal the given value."""
  street_gte: String

  """All values containing the given string."""
  street_contains: String

  """All values not containing the given string."""
  street_not_contains: String

  """All values starting with the given string."""
  street_starts_with: String

  """All values not starting with the given string."""
  street_not_starts_with: String

  """All values ending with the given string."""
  street_ends_with: String

  """All values not ending with the given string."""
  street_not_ends_with: String
  zip: String

  """All values that are not equal to given value."""
  zip_not: String

  """All values that are contained in given list."""
  zip_in: [String!]

  """All values that are not contained in given list."""
  zip_not_in: [String!]

  """All values less than the given value."""
  zip_lt: String

  """All values less than or equal the given value."""
  zip_lte: String

  """All values greater than the given value."""
  zip_gt: String

  """All values greater than or equal the given value."""
  zip_gte: String

  """All values containing the given string."""
  zip_contains: String

  """All values not containing the given string."""
  zip_not_contains: String

  """All values starting with the given string."""
  zip_starts_with: String

  """All values not starting with the given string."""
  zip_not_starts_with: String

  """All values ending with the given string."""
  zip_ends_with: String

  """All values not ending with the given string."""
  zip_not_ends_with: String
  accident: AccidentWhereInput
}

type LoginUserPayload {
  user: User
  token: String
  isNewUser: Boolean
}

enum MarketStatusEnum {
  AVAILABLE
  REMOVED
  RENTED
}

type Mutation {
  loginUserWithAuth0Lock(token: String!, type: UserTypeEnum!): LoginUserPayload
  switchAccount: LoginUserPayload
  acceptCurrentTos(tosVersion: String!): Boolean

  """
  Car must be available, creates a rental with status APPLIED_NOT_VERIFIED if
  driver is not verified, or just APPLIED if they are ready to go
  """
  requestBooking(data: RequestBookingInput!): RequestBookingPayload
  updateProfilePhoto(data: UpdateProfilePhotoInput!): UpdateProfilePhotoPayload
  updateProfile(input: UpdateProfileInput): UpdateProfilePayload
  uploadDriversLicense(photo: Upload!): UpdateProfilePayload

  """
  Checks if user already has payment info, and if so, assigns the source. Otherwise, creates new paymentInfo
  """
  updatePaymentInfo(data: UpdatePaymentInfoInput!): UpdatePaymentInfoPayload

  """
  Checks if user already has payout info, and if so, assigns the source. Otherwise, creates new payoutInfo
  """
  updatePayoutInfo(data: UpdatePayoutInfoInput!): UpdatePayoutInfoPayload
  startBackgroundCheck(data: StartBackgroundCheckInput!): StartBackgroundCheckPayload

  """
  Rental's car must be owned by current user, specified rental must be in
  APPLIED status approves specified rental and auto-rejects other rentals that
  are in APPLIED/APPLIED_NOT_VERIFIED statuses
  """
  approveBooking(data: ApproveRejectBookingInput!): ApproveRejectBookingPayload

  """
  Rental's car must be owned by current user, specified rental must be in APPLIED status
  """
  rejectBooking(data: ApproveRejectBookingInput!): ApproveRejectBookingPayload
  toggleRentalExtension(data: ToggleRentalExtensionInput!): ToggleRentalExtensionPayload
  confirmDropoff(data: ConfirmDropoffInput!): ConfirmDropoffPayload
  confirmPickup(data: ConfirmPickupInput!): ConfirmPickupPayload
  rateDriver(data: RateDriverInput!): RateDriverPayload
  toggleListing(data: ToggleListingInput!): ToggleListingPayload
  listCar(data: ListCarInput!): ListCarPayload
  removeCarPhoto(data: RemoveCarPhotoInput!): AddRemoveCarPhotoPayload
  addCarPhoto(data: AddCarPhotoInput!): AddRemoveCarPhotoPayload
  uploadCarDocument(data: UploadCarDocumentInput!): UploadCarDocumentPayload
  updateCarDetails(data: UpdateCarDetailsInput!): UpdateCarPayload
  duplicateCar(data: DuplicateCarInput!): UpdateCarPayload
  extendRental(data: ExtendRentalInput!): ExtendRentalPayload
  createClaimEvidence(data: CreateClaimEvidenceInput!): CreateClaimEvidencePayload
}

interface MutationResponse {
  code: String
  success: Boolean
  message: String
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

enum OffersSortByEnum {
  RELEVANCE
  PRICE_ASC
  PRICE_DESC
  DISTANCE
}

type Owner {
  aboutMe: String
  id: ID!
  legacyId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User
  verified: Int @deprecated
  claims(filter: ClaimWhereInput, orderBy: ClaimOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Claim!]
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminNoteConnection!
  cars(where: CarWhereInput, orderBy: CarOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CarConnection!
  rentalsConnection(filter: RentalWhereInput, orderBy: RentalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalConnection!
  rentals(filter: RentalWhereInput, orderBy: RentalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Rental]!
}

input OwnerWhereInput {
  """Logical AND on all given filters."""
  AND: [OwnerWhereInput!]

  """Logical OR on all given filters."""
  OR: [OwnerWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OwnerWhereInput!]
  aboutMe: String

  """All values that are not equal to given value."""
  aboutMe_not: String

  """All values that are contained in given list."""
  aboutMe_in: [String!]

  """All values that are not contained in given list."""
  aboutMe_not_in: [String!]

  """All values less than the given value."""
  aboutMe_lt: String

  """All values less than or equal the given value."""
  aboutMe_lte: String

  """All values greater than the given value."""
  aboutMe_gt: String

  """All values greater than or equal the given value."""
  aboutMe_gte: String

  """All values containing the given string."""
  aboutMe_contains: String

  """All values not containing the given string."""
  aboutMe_not_contains: String

  """All values starting with the given string."""
  aboutMe_starts_with: String

  """All values not starting with the given string."""
  aboutMe_not_starts_with: String

  """All values ending with the given string."""
  aboutMe_ends_with: String

  """All values not ending with the given string."""
  aboutMe_not_ends_with: String
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  legacyId: ID

  """All values that are not equal to given value."""
  legacyId_not: ID

  """All values that are contained in given list."""
  legacyId_in: [ID!]

  """All values that are not contained in given list."""
  legacyId_not_in: [ID!]

  """All values less than the given value."""
  legacyId_lt: ID

  """All values less than or equal the given value."""
  legacyId_lte: ID

  """All values greater than the given value."""
  legacyId_gt: ID

  """All values greater than or equal the given value."""
  legacyId_gte: ID

  """All values containing the given string."""
  legacyId_contains: ID

  """All values not containing the given string."""
  legacyId_not_contains: ID

  """All values starting with the given string."""
  legacyId_starts_with: ID

  """All values not starting with the given string."""
  legacyId_not_starts_with: ID

  """All values ending with the given string."""
  legacyId_ends_with: ID

  """All values not ending with the given string."""
  legacyId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  user: UserWhereInput
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type PaymentAccount implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: PaymentProviderTypeEnum!
  status: PaymentAccountStatusEnum!
  userId: ID!
  legacyUserId: ID
  deposits(where: DepositWhereInput, orderBy: DepositOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Deposit!]
  stripePaymentInformation(where: StripePaymentInformationWhereInput): StripePaymentInformation
  rentalPayments(where: RentalPaymentWhereInput, orderBy: RentalPaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalPayment!]
  backgroundCheckPayment(where: BackgroundCheckPaymentWhereInput): BackgroundCheckPayment
  rentalLateFeePayments(where: RentalLateFeePaymentWhereInput, orderBy: RentalLateFeePaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalLateFeePayment!]
  claimPayments(where: ClaimPaymentWhereInput, orderBy: ClaimPaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ClaimPayment!]
  user: User!
}

enum PaymentAccountOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  userId_ASC
  userId_DESC
  legacyUserId_ASC
  legacyUserId_DESC
}

enum PaymentAccountStatusEnum {
  PRIMARY
  SECONDARY
  INACTIVE
}

input PaymentAccountWhereInput {
  """Logical AND on all given filters."""
  AND: [PaymentAccountWhereInput!]

  """Logical OR on all given filters."""
  OR: [PaymentAccountWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PaymentAccountWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  type: PaymentProviderTypeEnum

  """All values that are not equal to given value."""
  type_not: PaymentProviderTypeEnum

  """All values that are contained in given list."""
  type_in: [PaymentProviderTypeEnum!]

  """All values that are not contained in given list."""
  type_not_in: [PaymentProviderTypeEnum!]
  status: PaymentAccountStatusEnum

  """All values that are not equal to given value."""
  status_not: PaymentAccountStatusEnum

  """All values that are contained in given list."""
  status_in: [PaymentAccountStatusEnum!]

  """All values that are not contained in given list."""
  status_not_in: [PaymentAccountStatusEnum!]
  userId: ID

  """All values that are not equal to given value."""
  userId_not: ID

  """All values that are contained in given list."""
  userId_in: [ID!]

  """All values that are not contained in given list."""
  userId_not_in: [ID!]

  """All values less than the given value."""
  userId_lt: ID

  """All values less than or equal the given value."""
  userId_lte: ID

  """All values greater than the given value."""
  userId_gt: ID

  """All values greater than or equal the given value."""
  userId_gte: ID

  """All values containing the given string."""
  userId_contains: ID

  """All values not containing the given string."""
  userId_not_contains: ID

  """All values starting with the given string."""
  userId_starts_with: ID

  """All values not starting with the given string."""
  userId_not_starts_with: ID

  """All values ending with the given string."""
  userId_ends_with: ID

  """All values not ending with the given string."""
  userId_not_ends_with: ID
  legacyUserId: ID

  """All values that are not equal to given value."""
  legacyUserId_not: ID

  """All values that are contained in given list."""
  legacyUserId_in: [ID!]

  """All values that are not contained in given list."""
  legacyUserId_not_in: [ID!]

  """All values less than the given value."""
  legacyUserId_lt: ID

  """All values less than or equal the given value."""
  legacyUserId_lte: ID

  """All values greater than the given value."""
  legacyUserId_gt: ID

  """All values greater than or equal the given value."""
  legacyUserId_gte: ID

  """All values containing the given string."""
  legacyUserId_contains: ID

  """All values not containing the given string."""
  legacyUserId_not_contains: ID

  """All values starting with the given string."""
  legacyUserId_starts_with: ID

  """All values not starting with the given string."""
  legacyUserId_not_starts_with: ID

  """All values ending with the given string."""
  legacyUserId_ends_with: ID

  """All values not ending with the given string."""
  legacyUserId_not_ends_with: ID
  deposits_every: DepositWhereInput
  deposits_some: DepositWhereInput
  deposits_none: DepositWhereInput
  stripePaymentInformation: StripePaymentInformationWhereInput
  rentalPayments_every: RentalPaymentWhereInput
  rentalPayments_some: RentalPaymentWhereInput
  rentalPayments_none: RentalPaymentWhereInput
  backgroundCheckPayment: BackgroundCheckPaymentWhereInput
  rentalLateFeePayments_every: RentalLateFeePaymentWhereInput
  rentalLateFeePayments_some: RentalLateFeePaymentWhereInput
  rentalLateFeePayments_none: RentalLateFeePaymentWhereInput
  claimPayments_every: ClaimPaymentWhereInput
  claimPayments_some: ClaimPaymentWhereInput
  claimPayments_none: ClaimPaymentWhereInput
}

enum PaymentProviderTypeEnum {
  STRIPE
}

type PayoutAccount implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  type: PaymentProviderTypeEnum!
  userId: ID
  legacyUserId: ID
  stripePayoutInformation(where: StripePayoutInformationWhereInput): StripePayoutInformation
  user: User!
}

enum PayoutAccountOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  type_ASC
  type_DESC
  userId_ASC
  userId_DESC
  legacyUserId_ASC
  legacyUserId_DESC
}

input PayoutAccountWhereInput {
  """Logical AND on all given filters."""
  AND: [PayoutAccountWhereInput!]

  """Logical OR on all given filters."""
  OR: [PayoutAccountWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PayoutAccountWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  type: PaymentProviderTypeEnum

  """All values that are not equal to given value."""
  type_not: PaymentProviderTypeEnum

  """All values that are contained in given list."""
  type_in: [PaymentProviderTypeEnum!]

  """All values that are not contained in given list."""
  type_not_in: [PaymentProviderTypeEnum!]
  userId: ID

  """All values that are not equal to given value."""
  userId_not: ID

  """All values that are contained in given list."""
  userId_in: [ID!]

  """All values that are not contained in given list."""
  userId_not_in: [ID!]

  """All values less than the given value."""
  userId_lt: ID

  """All values less than or equal the given value."""
  userId_lte: ID

  """All values greater than the given value."""
  userId_gt: ID

  """All values greater than or equal the given value."""
  userId_gte: ID

  """All values containing the given string."""
  userId_contains: ID

  """All values not containing the given string."""
  userId_not_contains: ID

  """All values starting with the given string."""
  userId_starts_with: ID

  """All values not starting with the given string."""
  userId_not_starts_with: ID

  """All values ending with the given string."""
  userId_ends_with: ID

  """All values not ending with the given string."""
  userId_not_ends_with: ID
  legacyUserId: ID

  """All values that are not equal to given value."""
  legacyUserId_not: ID

  """All values that are contained in given list."""
  legacyUserId_in: [ID!]

  """All values that are not contained in given list."""
  legacyUserId_not_in: [ID!]

  """All values less than the given value."""
  legacyUserId_lt: ID

  """All values less than or equal the given value."""
  legacyUserId_lte: ID

  """All values greater than the given value."""
  legacyUserId_gt: ID

  """All values greater than or equal the given value."""
  legacyUserId_gte: ID

  """All values containing the given string."""
  legacyUserId_contains: ID

  """All values not containing the given string."""
  legacyUserId_not_contains: ID

  """All values starting with the given string."""
  legacyUserId_starts_with: ID

  """All values not starting with the given string."""
  legacyUserId_not_starts_with: ID

  """All values ending with the given string."""
  legacyUserId_ends_with: ID

  """All values not ending with the given string."""
  legacyUserId_not_ends_with: ID
  stripePayoutInformation: StripePayoutInformationWhereInput
}

type PoliceReport implements Node {
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  policeDepartment: String
  reportNumber: String
  factOfLoss(where: FactOfLossWhereInput): FactOfLoss
}

input PoliceReportWhereInput {
  """Logical AND on all given filters."""
  AND: [PoliceReportWhereInput!]

  """Logical OR on all given filters."""
  OR: [PoliceReportWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PoliceReportWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  policeDepartment: String

  """All values that are not equal to given value."""
  policeDepartment_not: String

  """All values that are contained in given list."""
  policeDepartment_in: [String!]

  """All values that are not contained in given list."""
  policeDepartment_not_in: [String!]

  """All values less than the given value."""
  policeDepartment_lt: String

  """All values less than or equal the given value."""
  policeDepartment_lte: String

  """All values greater than the given value."""
  policeDepartment_gt: String

  """All values greater than or equal the given value."""
  policeDepartment_gte: String

  """All values containing the given string."""
  policeDepartment_contains: String

  """All values not containing the given string."""
  policeDepartment_not_contains: String

  """All values starting with the given string."""
  policeDepartment_starts_with: String

  """All values not starting with the given string."""
  policeDepartment_not_starts_with: String

  """All values ending with the given string."""
  policeDepartment_ends_with: String

  """All values not ending with the given string."""
  policeDepartment_not_ends_with: String
  reportNumber: String

  """All values that are not equal to given value."""
  reportNumber_not: String

  """All values that are contained in given list."""
  reportNumber_in: [String!]

  """All values that are not contained in given list."""
  reportNumber_not_in: [String!]

  """All values less than the given value."""
  reportNumber_lt: String

  """All values less than or equal the given value."""
  reportNumber_lte: String

  """All values greater than the given value."""
  reportNumber_gt: String

  """All values greater than or equal the given value."""
  reportNumber_gte: String

  """All values containing the given string."""
  reportNumber_contains: String

  """All values not containing the given string."""
  reportNumber_not_contains: String

  """All values starting with the given string."""
  reportNumber_starts_with: String

  """All values not starting with the given string."""
  reportNumber_not_starts_with: String

  """All values ending with the given string."""
  reportNumber_ends_with: String

  """All values not ending with the given string."""
  reportNumber_not_ends_with: String
  factOfLoss: FactOfLossWhereInput
}

type PostInsurance implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  insurance(where: InsuranceWhereInput): Insurance
  isDamaged: Boolean
  isGasLower: Boolean
  isLate: Boolean
  isMileageExceeded: Boolean
}

input PostInsuranceWhereInput {
  """Logical AND on all given filters."""
  AND: [PostInsuranceWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostInsuranceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostInsuranceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  isDamaged: Boolean

  """All values that are not equal to given value."""
  isDamaged_not: Boolean
  isGasLower: Boolean

  """All values that are not equal to given value."""
  isGasLower_not: Boolean
  isLate: Boolean

  """All values that are not equal to given value."""
  isLate_not: Boolean
  isMileageExceeded: Boolean

  """All values that are not equal to given value."""
  isMileageExceeded_not: Boolean
  insurance: InsuranceWhereInput
}

type PreInsurance implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  pickedUpAt: DateTime
  requestedPickupAt: DateTime
  insurance(where: InsuranceWhereInput): Insurance
  isDriverIdentified: Boolean
  photos(where: PreInsurancePhotoWhereInput, orderBy: PreInsurancePhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PreInsurancePhoto!]
}

type PreInsurancePhoto implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  fileId: ID!
  type: PreInsurancePhotoTypeEnum!
  preInsurance(where: PreInsuranceWhereInput): PreInsurance
  file: File
}

enum PreInsurancePhotoOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  fileId_ASC
  fileId_DESC
  type_ASC
  type_DESC
}

enum PreInsurancePhotoTypeEnum {
  GENERAL
  CAR_BACK
  CAR_FRONT
  CAR_GAS_LEVEL
  CAR_MILEAGE
  CAR_PASSENGER_SIDE
  CAR_DRIVER_SIDE
}

input PreInsurancePhotoWhereInput {
  """Logical AND on all given filters."""
  AND: [PreInsurancePhotoWhereInput!]

  """Logical OR on all given filters."""
  OR: [PreInsurancePhotoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PreInsurancePhotoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  fileId: ID

  """All values that are not equal to given value."""
  fileId_not: ID

  """All values that are contained in given list."""
  fileId_in: [ID!]

  """All values that are not contained in given list."""
  fileId_not_in: [ID!]

  """All values less than the given value."""
  fileId_lt: ID

  """All values less than or equal the given value."""
  fileId_lte: ID

  """All values greater than the given value."""
  fileId_gt: ID

  """All values greater than or equal the given value."""
  fileId_gte: ID

  """All values containing the given string."""
  fileId_contains: ID

  """All values not containing the given string."""
  fileId_not_contains: ID

  """All values starting with the given string."""
  fileId_starts_with: ID

  """All values not starting with the given string."""
  fileId_not_starts_with: ID

  """All values ending with the given string."""
  fileId_ends_with: ID

  """All values not ending with the given string."""
  fileId_not_ends_with: ID
  type: PreInsurancePhotoTypeEnum

  """All values that are not equal to given value."""
  type_not: PreInsurancePhotoTypeEnum

  """All values that are contained in given list."""
  type_in: [PreInsurancePhotoTypeEnum!]

  """All values that are not contained in given list."""
  type_not_in: [PreInsurancePhotoTypeEnum!]
  preInsurance: PreInsuranceWhereInput
}

input PreInsuranceWhereInput {
  """Logical AND on all given filters."""
  AND: [PreInsuranceWhereInput!]

  """Logical OR on all given filters."""
  OR: [PreInsuranceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PreInsuranceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  pickedUpAt: DateTime

  """All values that are not equal to given value."""
  pickedUpAt_not: DateTime

  """All values that are contained in given list."""
  pickedUpAt_in: [DateTime!]

  """All values that are not contained in given list."""
  pickedUpAt_not_in: [DateTime!]

  """All values less than the given value."""
  pickedUpAt_lt: DateTime

  """All values less than or equal the given value."""
  pickedUpAt_lte: DateTime

  """All values greater than the given value."""
  pickedUpAt_gt: DateTime

  """All values greater than or equal the given value."""
  pickedUpAt_gte: DateTime
  requestedPickupAt: DateTime

  """All values that are not equal to given value."""
  requestedPickupAt_not: DateTime

  """All values that are contained in given list."""
  requestedPickupAt_in: [DateTime!]

  """All values that are not contained in given list."""
  requestedPickupAt_not_in: [DateTime!]

  """All values less than the given value."""
  requestedPickupAt_lt: DateTime

  """All values less than or equal the given value."""
  requestedPickupAt_lte: DateTime

  """All values greater than the given value."""
  requestedPickupAt_gt: DateTime

  """All values greater than or equal the given value."""
  requestedPickupAt_gte: DateTime
  isDriverIdentified: Boolean

  """All values that are not equal to given value."""
  isDriverIdentified_not: Boolean
  insurance: InsuranceWhereInput
  photos_every: PreInsurancePhotoWhereInput
  photos_some: PreInsurancePhotoWhereInput
  photos_none: PreInsurancePhotoWhereInput
}

input ProspectiveRentalContractInput {
  carId: ID!
  rentalDays: Int!
  startDate: DateTime!
  couponCode: String
}

type Query {
  viewer: Viewer
  CURRENT_TOS_VERSION: String
  rental(where: RentalWhereUniqueInput!): Rental
  car(where: CarWhereUniqueInput!): Car
  getCoupon(code: String): Coupon
  validateVin(vin: String!): ValidateVin
  geoStates: [GeoState]
  getCarPriceBreakdown(carId: ID!, rentalDays: Int!, couponCode: String): CarPriceBreakdown
  offersConnection(filter: CarWhereInput, orderBy: CarOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int, sortBy: OffersSortByEnum): CarConnection!
  offers(filter: CarWhereInput, orderBy: CarOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Car]!
  offer(offerId: ID!): Car
  getProspectiveRentalContractUrl(where: ProspectiveRentalContractInput): String!
}

input RateDriverInput {
  rentalId: ID!
  rating: Int!
  comment: String
}

type RateDriverPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rating: Rating
}

type Rating implements Node {
  createdAt: DateTime!
  comment: String
  carId: ID
  revieweeId: ID
  reviewerId: ID
  id: ID!
  rating: Int!
  rentalId: ID!
  updatedAt: DateTime!
  helpful: Int
  type: RatingType!
  rental: Rental
}

"""A connection to a list of items."""
type RatingConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [RatingEdge]!
  aggregate: AggregateRating!
}

"""An edge in a connection."""
type RatingEdge {
  """The item at the end of the edge."""
  node: Rating!

  """A cursor for use in pagination."""
  cursor: String!
}

enum RatingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  comment_ASC
  comment_DESC
  carId_ASC
  carId_DESC
  revieweeId_ASC
  revieweeId_DESC
  reviewerId_ASC
  reviewerId_DESC
  id_ASC
  id_DESC
  rating_ASC
  rating_DESC
  rentalId_ASC
  rentalId_DESC
  updatedAt_ASC
  updatedAt_DESC
  helpful_ASC
  helpful_DESC
  type_ASC
  type_DESC
}

enum RatingType {
  CAR_RATING
  DRIVER_RATING
}

input RatingWhereInput {
  """Logical AND on all given filters."""
  AND: [RatingWhereInput!]

  """Logical OR on all given filters."""
  OR: [RatingWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RatingWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  comment: String

  """All values that are not equal to given value."""
  comment_not: String

  """All values that are contained in given list."""
  comment_in: [String!]

  """All values that are not contained in given list."""
  comment_not_in: [String!]

  """All values less than the given value."""
  comment_lt: String

  """All values less than or equal the given value."""
  comment_lte: String

  """All values greater than the given value."""
  comment_gt: String

  """All values greater than or equal the given value."""
  comment_gte: String

  """All values containing the given string."""
  comment_contains: String

  """All values not containing the given string."""
  comment_not_contains: String

  """All values starting with the given string."""
  comment_starts_with: String

  """All values not starting with the given string."""
  comment_not_starts_with: String

  """All values ending with the given string."""
  comment_ends_with: String

  """All values not ending with the given string."""
  comment_not_ends_with: String
  carId: ID

  """All values that are not equal to given value."""
  carId_not: ID

  """All values that are contained in given list."""
  carId_in: [ID!]

  """All values that are not contained in given list."""
  carId_not_in: [ID!]

  """All values less than the given value."""
  carId_lt: ID

  """All values less than or equal the given value."""
  carId_lte: ID

  """All values greater than the given value."""
  carId_gt: ID

  """All values greater than or equal the given value."""
  carId_gte: ID

  """All values containing the given string."""
  carId_contains: ID

  """All values not containing the given string."""
  carId_not_contains: ID

  """All values starting with the given string."""
  carId_starts_with: ID

  """All values not starting with the given string."""
  carId_not_starts_with: ID

  """All values ending with the given string."""
  carId_ends_with: ID

  """All values not ending with the given string."""
  carId_not_ends_with: ID
  revieweeId: ID

  """All values that are not equal to given value."""
  revieweeId_not: ID

  """All values that are contained in given list."""
  revieweeId_in: [ID!]

  """All values that are not contained in given list."""
  revieweeId_not_in: [ID!]

  """All values less than the given value."""
  revieweeId_lt: ID

  """All values less than or equal the given value."""
  revieweeId_lte: ID

  """All values greater than the given value."""
  revieweeId_gt: ID

  """All values greater than or equal the given value."""
  revieweeId_gte: ID

  """All values containing the given string."""
  revieweeId_contains: ID

  """All values not containing the given string."""
  revieweeId_not_contains: ID

  """All values starting with the given string."""
  revieweeId_starts_with: ID

  """All values not starting with the given string."""
  revieweeId_not_starts_with: ID

  """All values ending with the given string."""
  revieweeId_ends_with: ID

  """All values not ending with the given string."""
  revieweeId_not_ends_with: ID
  reviewerId: ID

  """All values that are not equal to given value."""
  reviewerId_not: ID

  """All values that are contained in given list."""
  reviewerId_in: [ID!]

  """All values that are not contained in given list."""
  reviewerId_not_in: [ID!]

  """All values less than the given value."""
  reviewerId_lt: ID

  """All values less than or equal the given value."""
  reviewerId_lte: ID

  """All values greater than the given value."""
  reviewerId_gt: ID

  """All values greater than or equal the given value."""
  reviewerId_gte: ID

  """All values containing the given string."""
  reviewerId_contains: ID

  """All values not containing the given string."""
  reviewerId_not_contains: ID

  """All values starting with the given string."""
  reviewerId_starts_with: ID

  """All values not starting with the given string."""
  reviewerId_not_starts_with: ID

  """All values ending with the given string."""
  reviewerId_ends_with: ID

  """All values not ending with the given string."""
  reviewerId_not_ends_with: ID
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  rating: Int

  """All values that are not equal to given value."""
  rating_not: Int

  """All values that are contained in given list."""
  rating_in: [Int!]

  """All values that are not contained in given list."""
  rating_not_in: [Int!]

  """All values less than the given value."""
  rating_lt: Int

  """All values less than or equal the given value."""
  rating_lte: Int

  """All values greater than the given value."""
  rating_gt: Int

  """All values greater than or equal the given value."""
  rating_gte: Int
  rentalId: ID

  """All values that are not equal to given value."""
  rentalId_not: ID

  """All values that are contained in given list."""
  rentalId_in: [ID!]

  """All values that are not contained in given list."""
  rentalId_not_in: [ID!]

  """All values less than the given value."""
  rentalId_lt: ID

  """All values less than or equal the given value."""
  rentalId_lte: ID

  """All values greater than the given value."""
  rentalId_gt: ID

  """All values greater than or equal the given value."""
  rentalId_gte: ID

  """All values containing the given string."""
  rentalId_contains: ID

  """All values not containing the given string."""
  rentalId_not_contains: ID

  """All values starting with the given string."""
  rentalId_starts_with: ID

  """All values not starting with the given string."""
  rentalId_not_starts_with: ID

  """All values ending with the given string."""
  rentalId_ends_with: ID

  """All values not ending with the given string."""
  rentalId_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  helpful: Int

  """All values that are not equal to given value."""
  helpful_not: Int

  """All values that are contained in given list."""
  helpful_in: [Int!]

  """All values that are not contained in given list."""
  helpful_not_in: [Int!]

  """All values less than the given value."""
  helpful_lt: Int

  """All values less than or equal the given value."""
  helpful_lte: Int

  """All values greater than the given value."""
  helpful_gt: Int

  """All values greater than or equal the given value."""
  helpful_gte: Int
  type: RatingType

  """All values that are not equal to given value."""
  type_not: RatingType

  """All values that are contained in given list."""
  type_in: [RatingType!]

  """All values that are not contained in given list."""
  type_not_in: [RatingType!]
}

input RemoveCarPhotoInput {
  carPhotoId: ID!
}

type Rental implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  legacyApplicationId: ID
  legacyRentalId: ID
  disallowExtensions: Boolean
  status: RentalStatusEnum
  cancellationReason: RentalCancellationTypeEnum
  rentalPeriods(where: RentalPeriodWhereInput, orderBy: RentalPeriodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalPeriod!]
  currentRentalPeriod: RentalPeriod
  carId: ID!
  driverId: ID
  depositId: ID
  requestedPickupAt: DateTime
  droppedOffAt: DateTime
  ownerApprovedAt: DateTime
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminNoteConnection!
  driver: Driver
  car: Car!
  driverRating: Rating
  carRating: Rating
  claim: Claim
  deposit: Deposit
  insurance: Insurance
  insurances(filter: InsuranceWhereInput, orderBy: InsuranceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Insurance]!
  insurancesConnection(filter: InsuranceWhereInput, orderBy: InsuranceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InsuranceConnection!
  overview: RentalOverview
  prospectiveRentalContractUrl: String
}

enum RentalCancellationTypeEnum {
  OWNER_CANCELLED
  DRIVER_CANCELLED
}

"""A connection to a list of items."""
type RentalConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [RentalEdge]!
  aggregate: AggregateRental!
}

"""An edge in a connection."""
type RentalEdge {
  """The item at the end of the edge."""
  node: Rental!

  """A cursor for use in pagination."""
  cursor: String!
}

type RentalLateFeePayment implements Node {
  amountInCents: Int!
  coupon(where: CouponWhereInput): Coupon
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  chargeId: String
  paymentAccount(where: PaymentAccountWhereInput): PaymentAccount
  rentalPayment(where: RentalPaymentWhereInput): RentalPayment
}

enum RentalLateFeePaymentOrderByInput {
  amountInCents_ASC
  amountInCents_DESC
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  chargeId_ASC
  chargeId_DESC
}

input RentalLateFeePaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [RentalLateFeePaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [RentalLateFeePaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RentalLateFeePaymentWhereInput!]
  amountInCents: Int

  """All values that are not equal to given value."""
  amountInCents_not: Int

  """All values that are contained in given list."""
  amountInCents_in: [Int!]

  """All values that are not contained in given list."""
  amountInCents_not_in: [Int!]

  """All values less than the given value."""
  amountInCents_lt: Int

  """All values less than or equal the given value."""
  amountInCents_lte: Int

  """All values greater than the given value."""
  amountInCents_gt: Int

  """All values greater than or equal the given value."""
  amountInCents_gte: Int
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  chargeId: String

  """All values that are not equal to given value."""
  chargeId_not: String

  """All values that are contained in given list."""
  chargeId_in: [String!]

  """All values that are not contained in given list."""
  chargeId_not_in: [String!]

  """All values less than the given value."""
  chargeId_lt: String

  """All values less than or equal the given value."""
  chargeId_lte: String

  """All values greater than the given value."""
  chargeId_gt: String

  """All values greater than or equal the given value."""
  chargeId_gte: String

  """All values containing the given string."""
  chargeId_contains: String

  """All values not containing the given string."""
  chargeId_not_contains: String

  """All values starting with the given string."""
  chargeId_starts_with: String

  """All values not starting with the given string."""
  chargeId_not_starts_with: String

  """All values ending with the given string."""
  chargeId_ends_with: String

  """All values not ending with the given string."""
  chargeId_not_ends_with: String
  coupon: CouponWhereInput
  paymentAccount: PaymentAccountWhereInput
  rentalPayment: RentalPaymentWhereInput
}

enum RentalOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  legacyApplicationId_ASC
  legacyApplicationId_DESC
  legacyRentalId_ASC
  legacyRentalId_DESC
  disallowExtensions_ASC
  disallowExtensions_DESC
  status_ASC
  status_DESC
  cancellationReason_ASC
  cancellationReason_DESC
  carId_ASC
  carId_DESC
  driverId_ASC
  driverId_DESC
  depositId_ASC
  depositId_DESC
  requestedPickupAt_ASC
  requestedPickupAt_DESC
  ownerApprovedAt_ASC
  ownerApprovedAt_DESC
  droppedOffAt_ASC
  droppedOffAt_DESC
}

type RentalOverview {
  id: ID!
  rentalDays: Int
  startDate: DateTime
  endDate: DateTime
  daysRemaining: Int
  hoursRemaining: Int
  ownerEarningsInCents: Int
  totalCostInCents: Int
  totalPaidInCents: Int
  lateFeeCaptured: Boolean
}

type RentalPayment implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  chargeId: String
  paymentAccount(where: PaymentAccountWhereInput): PaymentAccount
  basePriceInCents: Int
  transactionFeeInCents: Int
  insuranceFeeInCents: Int
  couponDiscountInCents: Int
  grandTotalInCents: Int
  ownerEarningsInCents: Int
  coupon(where: CouponWhereInput): Coupon
  rentalPeriodId: ID!
  legacyRentalPeriodId: ID
  rentalLateFeePayment(where: RentalLateFeePaymentWhereInput): RentalLateFeePayment
  capture: Boolean
  rentalPeriod: RentalPeriod
}

enum RentalPaymentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  chargeId_ASC
  chargeId_DESC
  basePriceInCents_ASC
  basePriceInCents_DESC
  transactionFeeInCents_ASC
  transactionFeeInCents_DESC
  insuranceFeeInCents_ASC
  insuranceFeeInCents_DESC
  couponDiscountInCents_ASC
  couponDiscountInCents_DESC
  grandTotalInCents_ASC
  grandTotalInCents_DESC
  ownerEarningsInCents_ASC
  ownerEarningsInCents_DESC
  rentalPeriodId_ASC
  rentalPeriodId_DESC
  legacyRentalPeriodId_ASC
  legacyRentalPeriodId_DESC
  capture_ASC
  capture_DESC
}

input RentalPaymentWhereInput {
  """Logical AND on all given filters."""
  AND: [RentalPaymentWhereInput!]

  """Logical OR on all given filters."""
  OR: [RentalPaymentWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RentalPaymentWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  chargeId: String

  """All values that are not equal to given value."""
  chargeId_not: String

  """All values that are contained in given list."""
  chargeId_in: [String!]

  """All values that are not contained in given list."""
  chargeId_not_in: [String!]

  """All values less than the given value."""
  chargeId_lt: String

  """All values less than or equal the given value."""
  chargeId_lte: String

  """All values greater than the given value."""
  chargeId_gt: String

  """All values greater than or equal the given value."""
  chargeId_gte: String

  """All values containing the given string."""
  chargeId_contains: String

  """All values not containing the given string."""
  chargeId_not_contains: String

  """All values starting with the given string."""
  chargeId_starts_with: String

  """All values not starting with the given string."""
  chargeId_not_starts_with: String

  """All values ending with the given string."""
  chargeId_ends_with: String

  """All values not ending with the given string."""
  chargeId_not_ends_with: String
  basePriceInCents: Int

  """All values that are not equal to given value."""
  basePriceInCents_not: Int

  """All values that are contained in given list."""
  basePriceInCents_in: [Int!]

  """All values that are not contained in given list."""
  basePriceInCents_not_in: [Int!]

  """All values less than the given value."""
  basePriceInCents_lt: Int

  """All values less than or equal the given value."""
  basePriceInCents_lte: Int

  """All values greater than the given value."""
  basePriceInCents_gt: Int

  """All values greater than or equal the given value."""
  basePriceInCents_gte: Int
  transactionFeeInCents: Int

  """All values that are not equal to given value."""
  transactionFeeInCents_not: Int

  """All values that are contained in given list."""
  transactionFeeInCents_in: [Int!]

  """All values that are not contained in given list."""
  transactionFeeInCents_not_in: [Int!]

  """All values less than the given value."""
  transactionFeeInCents_lt: Int

  """All values less than or equal the given value."""
  transactionFeeInCents_lte: Int

  """All values greater than the given value."""
  transactionFeeInCents_gt: Int

  """All values greater than or equal the given value."""
  transactionFeeInCents_gte: Int
  insuranceFeeInCents: Int

  """All values that are not equal to given value."""
  insuranceFeeInCents_not: Int

  """All values that are contained in given list."""
  insuranceFeeInCents_in: [Int!]

  """All values that are not contained in given list."""
  insuranceFeeInCents_not_in: [Int!]

  """All values less than the given value."""
  insuranceFeeInCents_lt: Int

  """All values less than or equal the given value."""
  insuranceFeeInCents_lte: Int

  """All values greater than the given value."""
  insuranceFeeInCents_gt: Int

  """All values greater than or equal the given value."""
  insuranceFeeInCents_gte: Int
  couponDiscountInCents: Int

  """All values that are not equal to given value."""
  couponDiscountInCents_not: Int

  """All values that are contained in given list."""
  couponDiscountInCents_in: [Int!]

  """All values that are not contained in given list."""
  couponDiscountInCents_not_in: [Int!]

  """All values less than the given value."""
  couponDiscountInCents_lt: Int

  """All values less than or equal the given value."""
  couponDiscountInCents_lte: Int

  """All values greater than the given value."""
  couponDiscountInCents_gt: Int

  """All values greater than or equal the given value."""
  couponDiscountInCents_gte: Int
  grandTotalInCents: Int

  """All values that are not equal to given value."""
  grandTotalInCents_not: Int

  """All values that are contained in given list."""
  grandTotalInCents_in: [Int!]

  """All values that are not contained in given list."""
  grandTotalInCents_not_in: [Int!]

  """All values less than the given value."""
  grandTotalInCents_lt: Int

  """All values less than or equal the given value."""
  grandTotalInCents_lte: Int

  """All values greater than the given value."""
  grandTotalInCents_gt: Int

  """All values greater than or equal the given value."""
  grandTotalInCents_gte: Int
  ownerEarningsInCents: Int

  """All values that are not equal to given value."""
  ownerEarningsInCents_not: Int

  """All values that are contained in given list."""
  ownerEarningsInCents_in: [Int!]

  """All values that are not contained in given list."""
  ownerEarningsInCents_not_in: [Int!]

  """All values less than the given value."""
  ownerEarningsInCents_lt: Int

  """All values less than or equal the given value."""
  ownerEarningsInCents_lte: Int

  """All values greater than the given value."""
  ownerEarningsInCents_gt: Int

  """All values greater than or equal the given value."""
  ownerEarningsInCents_gte: Int
  rentalPeriodId: ID

  """All values that are not equal to given value."""
  rentalPeriodId_not: ID

  """All values that are contained in given list."""
  rentalPeriodId_in: [ID!]

  """All values that are not contained in given list."""
  rentalPeriodId_not_in: [ID!]

  """All values less than the given value."""
  rentalPeriodId_lt: ID

  """All values less than or equal the given value."""
  rentalPeriodId_lte: ID

  """All values greater than the given value."""
  rentalPeriodId_gt: ID

  """All values greater than or equal the given value."""
  rentalPeriodId_gte: ID

  """All values containing the given string."""
  rentalPeriodId_contains: ID

  """All values not containing the given string."""
  rentalPeriodId_not_contains: ID

  """All values starting with the given string."""
  rentalPeriodId_starts_with: ID

  """All values not starting with the given string."""
  rentalPeriodId_not_starts_with: ID

  """All values ending with the given string."""
  rentalPeriodId_ends_with: ID

  """All values not ending with the given string."""
  rentalPeriodId_not_ends_with: ID
  legacyRentalPeriodId: ID

  """All values that are not equal to given value."""
  legacyRentalPeriodId_not: ID

  """All values that are contained in given list."""
  legacyRentalPeriodId_in: [ID!]

  """All values that are not contained in given list."""
  legacyRentalPeriodId_not_in: [ID!]

  """All values less than the given value."""
  legacyRentalPeriodId_lt: ID

  """All values less than or equal the given value."""
  legacyRentalPeriodId_lte: ID

  """All values greater than the given value."""
  legacyRentalPeriodId_gt: ID

  """All values greater than or equal the given value."""
  legacyRentalPeriodId_gte: ID

  """All values containing the given string."""
  legacyRentalPeriodId_contains: ID

  """All values not containing the given string."""
  legacyRentalPeriodId_not_contains: ID

  """All values starting with the given string."""
  legacyRentalPeriodId_starts_with: ID

  """All values not starting with the given string."""
  legacyRentalPeriodId_not_starts_with: ID

  """All values ending with the given string."""
  legacyRentalPeriodId_ends_with: ID

  """All values not ending with the given string."""
  legacyRentalPeriodId_not_ends_with: ID
  capture: Boolean

  """All values that are not equal to given value."""
  capture_not: Boolean
  paymentAccount: PaymentAccountWhereInput
  coupon: CouponWhereInput
  rentalLateFeePayment: RentalLateFeePaymentWhereInput
}

type RentalPeriod implements Node {
  id: ID!
  legacyExtensionId: ID
  carId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
  rental(where: RentalWhereInput): Rental
  endDate: DateTime
  numDays: Int!
  paymentId: ID
  rentalContractId: String
  startDate: DateTime
  type: RentalPeriodTypeEnum!
  rentalContract: File
  payment: RentalPayment
}

enum RentalPeriodOrderByInput {
  id_ASC
  id_DESC
  legacyExtensionId_ASC
  legacyExtensionId_DESC
  carId_ASC
  carId_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  endDate_ASC
  endDate_DESC
  numDays_ASC
  numDays_DESC
  paymentId_ASC
  paymentId_DESC
  rentalContractId_ASC
  rentalContractId_DESC
  startDate_ASC
  startDate_DESC
  type_ASC
  type_DESC
}

enum RentalPeriodTypeEnum {
  INITIAL
  EXTENSION
  VOID
}

input RentalPeriodWhereInput {
  """Logical AND on all given filters."""
  AND: [RentalPeriodWhereInput!]

  """Logical OR on all given filters."""
  OR: [RentalPeriodWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RentalPeriodWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  legacyExtensionId: ID

  """All values that are not equal to given value."""
  legacyExtensionId_not: ID

  """All values that are contained in given list."""
  legacyExtensionId_in: [ID!]

  """All values that are not contained in given list."""
  legacyExtensionId_not_in: [ID!]

  """All values less than the given value."""
  legacyExtensionId_lt: ID

  """All values less than or equal the given value."""
  legacyExtensionId_lte: ID

  """All values greater than the given value."""
  legacyExtensionId_gt: ID

  """All values greater than or equal the given value."""
  legacyExtensionId_gte: ID

  """All values containing the given string."""
  legacyExtensionId_contains: ID

  """All values not containing the given string."""
  legacyExtensionId_not_contains: ID

  """All values starting with the given string."""
  legacyExtensionId_starts_with: ID

  """All values not starting with the given string."""
  legacyExtensionId_not_starts_with: ID

  """All values ending with the given string."""
  legacyExtensionId_ends_with: ID

  """All values not ending with the given string."""
  legacyExtensionId_not_ends_with: ID
  carId: ID

  """All values that are not equal to given value."""
  carId_not: ID

  """All values that are contained in given list."""
  carId_in: [ID!]

  """All values that are not contained in given list."""
  carId_not_in: [ID!]

  """All values less than the given value."""
  carId_lt: ID

  """All values less than or equal the given value."""
  carId_lte: ID

  """All values greater than the given value."""
  carId_gt: ID

  """All values greater than or equal the given value."""
  carId_gte: ID

  """All values containing the given string."""
  carId_contains: ID

  """All values not containing the given string."""
  carId_not_contains: ID

  """All values starting with the given string."""
  carId_starts_with: ID

  """All values not starting with the given string."""
  carId_not_starts_with: ID

  """All values ending with the given string."""
  carId_ends_with: ID

  """All values not ending with the given string."""
  carId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  endDate: DateTime

  """All values that are not equal to given value."""
  endDate_not: DateTime

  """All values that are contained in given list."""
  endDate_in: [DateTime!]

  """All values that are not contained in given list."""
  endDate_not_in: [DateTime!]

  """All values less than the given value."""
  endDate_lt: DateTime

  """All values less than or equal the given value."""
  endDate_lte: DateTime

  """All values greater than the given value."""
  endDate_gt: DateTime

  """All values greater than or equal the given value."""
  endDate_gte: DateTime
  numDays: Int

  """All values that are not equal to given value."""
  numDays_not: Int

  """All values that are contained in given list."""
  numDays_in: [Int!]

  """All values that are not contained in given list."""
  numDays_not_in: [Int!]

  """All values less than the given value."""
  numDays_lt: Int

  """All values less than or equal the given value."""
  numDays_lte: Int

  """All values greater than the given value."""
  numDays_gt: Int

  """All values greater than or equal the given value."""
  numDays_gte: Int
  paymentId: ID

  """All values that are not equal to given value."""
  paymentId_not: ID

  """All values that are contained in given list."""
  paymentId_in: [ID!]

  """All values that are not contained in given list."""
  paymentId_not_in: [ID!]

  """All values less than the given value."""
  paymentId_lt: ID

  """All values less than or equal the given value."""
  paymentId_lte: ID

  """All values greater than the given value."""
  paymentId_gt: ID

  """All values greater than or equal the given value."""
  paymentId_gte: ID

  """All values containing the given string."""
  paymentId_contains: ID

  """All values not containing the given string."""
  paymentId_not_contains: ID

  """All values starting with the given string."""
  paymentId_starts_with: ID

  """All values not starting with the given string."""
  paymentId_not_starts_with: ID

  """All values ending with the given string."""
  paymentId_ends_with: ID

  """All values not ending with the given string."""
  paymentId_not_ends_with: ID
  rentalContractId: String

  """All values that are not equal to given value."""
  rentalContractId_not: String

  """All values that are contained in given list."""
  rentalContractId_in: [String!]

  """All values that are not contained in given list."""
  rentalContractId_not_in: [String!]

  """All values less than the given value."""
  rentalContractId_lt: String

  """All values less than or equal the given value."""
  rentalContractId_lte: String

  """All values greater than the given value."""
  rentalContractId_gt: String

  """All values greater than or equal the given value."""
  rentalContractId_gte: String

  """All values containing the given string."""
  rentalContractId_contains: String

  """All values not containing the given string."""
  rentalContractId_not_contains: String

  """All values starting with the given string."""
  rentalContractId_starts_with: String

  """All values not starting with the given string."""
  rentalContractId_not_starts_with: String

  """All values ending with the given string."""
  rentalContractId_ends_with: String

  """All values not ending with the given string."""
  rentalContractId_not_ends_with: String
  startDate: DateTime

  """All values that are not equal to given value."""
  startDate_not: DateTime

  """All values that are contained in given list."""
  startDate_in: [DateTime!]

  """All values that are not contained in given list."""
  startDate_not_in: [DateTime!]

  """All values less than the given value."""
  startDate_lt: DateTime

  """All values less than or equal the given value."""
  startDate_lte: DateTime

  """All values greater than the given value."""
  startDate_gt: DateTime

  """All values greater than or equal the given value."""
  startDate_gte: DateTime
  type: RentalPeriodTypeEnum

  """All values that are not equal to given value."""
  type_not: RentalPeriodTypeEnum

  """All values that are contained in given list."""
  type_in: [RentalPeriodTypeEnum!]

  """All values that are not contained in given list."""
  type_not_in: [RentalPeriodTypeEnum!]
  rental: RentalWhereInput
}

enum RentalStatusEnum {
  APPLIED
  APPLIED_NOT_VERIFIED
  APPLICATION_REJECTED
  APPLICATION_EXPIRED
  APPLICATION_AUTO_REJECTED
  PENDING_INSURANCE
  CANCELLED
  PENDING_PICKUP
  ACTIVE
  LATE
  COMPLETED
  ARCHIVED
}

input RentalWhereInput {
  """Logical AND on all given filters."""
  AND: [RentalWhereInput!]

  """Logical OR on all given filters."""
  OR: [RentalWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [RentalWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  legacyApplicationId: ID

  """All values that are not equal to given value."""
  legacyApplicationId_not: ID

  """All values that are contained in given list."""
  legacyApplicationId_in: [ID!]

  """All values that are not contained in given list."""
  legacyApplicationId_not_in: [ID!]

  """All values less than the given value."""
  legacyApplicationId_lt: ID

  """All values less than or equal the given value."""
  legacyApplicationId_lte: ID

  """All values greater than the given value."""
  legacyApplicationId_gt: ID

  """All values greater than or equal the given value."""
  legacyApplicationId_gte: ID

  """All values containing the given string."""
  legacyApplicationId_contains: ID

  """All values not containing the given string."""
  legacyApplicationId_not_contains: ID

  """All values starting with the given string."""
  legacyApplicationId_starts_with: ID

  """All values not starting with the given string."""
  legacyApplicationId_not_starts_with: ID

  """All values ending with the given string."""
  legacyApplicationId_ends_with: ID

  """All values not ending with the given string."""
  legacyApplicationId_not_ends_with: ID
  legacyRentalId: ID

  """All values that are not equal to given value."""
  legacyRentalId_not: ID

  """All values that are contained in given list."""
  legacyRentalId_in: [ID!]

  """All values that are not contained in given list."""
  legacyRentalId_not_in: [ID!]

  """All values less than the given value."""
  legacyRentalId_lt: ID

  """All values less than or equal the given value."""
  legacyRentalId_lte: ID

  """All values greater than the given value."""
  legacyRentalId_gt: ID

  """All values greater than or equal the given value."""
  legacyRentalId_gte: ID

  """All values containing the given string."""
  legacyRentalId_contains: ID

  """All values not containing the given string."""
  legacyRentalId_not_contains: ID

  """All values starting with the given string."""
  legacyRentalId_starts_with: ID

  """All values not starting with the given string."""
  legacyRentalId_not_starts_with: ID

  """All values ending with the given string."""
  legacyRentalId_ends_with: ID

  """All values not ending with the given string."""
  legacyRentalId_not_ends_with: ID
  disallowExtensions: Boolean

  """All values that are not equal to given value."""
  disallowExtensions_not: Boolean
  status: RentalStatusEnum

  """All values that are not equal to given value."""
  status_not: RentalStatusEnum

  """All values that are contained in given list."""
  status_in: [RentalStatusEnum!]

  """All values that are not contained in given list."""
  status_not_in: [RentalStatusEnum!]
  cancellationReason: RentalCancellationTypeEnum

  """All values that are not equal to given value."""
  cancellationReason_not: RentalCancellationTypeEnum

  """All values that are contained in given list."""
  cancellationReason_in: [RentalCancellationTypeEnum!]

  """All values that are not contained in given list."""
  cancellationReason_not_in: [RentalCancellationTypeEnum!]
  carId: ID

  """All values that are not equal to given value."""
  carId_not: ID

  """All values that are contained in given list."""
  carId_in: [ID!]

  """All values that are not contained in given list."""
  carId_not_in: [ID!]

  """All values less than the given value."""
  carId_lt: ID

  """All values less than or equal the given value."""
  carId_lte: ID

  """All values greater than the given value."""
  carId_gt: ID

  """All values greater than or equal the given value."""
  carId_gte: ID

  """All values containing the given string."""
  carId_contains: ID

  """All values not containing the given string."""
  carId_not_contains: ID

  """All values starting with the given string."""
  carId_starts_with: ID

  """All values not starting with the given string."""
  carId_not_starts_with: ID

  """All values ending with the given string."""
  carId_ends_with: ID

  """All values not ending with the given string."""
  carId_not_ends_with: ID
  driverId: ID

  """All values that are not equal to given value."""
  driverId_not: ID

  """All values that are contained in given list."""
  driverId_in: [ID!]

  """All values that are not contained in given list."""
  driverId_not_in: [ID!]

  """All values less than the given value."""
  driverId_lt: ID

  """All values less than or equal the given value."""
  driverId_lte: ID

  """All values greater than the given value."""
  driverId_gt: ID

  """All values greater than or equal the given value."""
  driverId_gte: ID

  """All values containing the given string."""
  driverId_contains: ID

  """All values not containing the given string."""
  driverId_not_contains: ID

  """All values starting with the given string."""
  driverId_starts_with: ID

  """All values not starting with the given string."""
  driverId_not_starts_with: ID

  """All values ending with the given string."""
  driverId_ends_with: ID

  """All values not ending with the given string."""
  driverId_not_ends_with: ID
  depositId: ID

  """All values that are not equal to given value."""
  depositId_not: ID

  """All values that are contained in given list."""
  depositId_in: [ID!]

  """All values that are not contained in given list."""
  depositId_not_in: [ID!]

  """All values less than the given value."""
  depositId_lt: ID

  """All values less than or equal the given value."""
  depositId_lte: ID

  """All values greater than the given value."""
  depositId_gt: ID

  """All values greater than or equal the given value."""
  depositId_gte: ID

  """All values containing the given string."""
  depositId_contains: ID

  """All values not containing the given string."""
  depositId_not_contains: ID

  """All values starting with the given string."""
  depositId_starts_with: ID

  """All values not starting with the given string."""
  depositId_not_starts_with: ID

  """All values ending with the given string."""
  depositId_ends_with: ID

  """All values not ending with the given string."""
  depositId_not_ends_with: ID
  requestedPickupAt: DateTime

  """All values that are not equal to given value."""
  requestedPickupAt_not: DateTime

  """All values that are contained in given list."""
  requestedPickupAt_in: [DateTime!]

  """All values that are not contained in given list."""
  requestedPickupAt_not_in: [DateTime!]

  """All values less than the given value."""
  requestedPickupAt_lt: DateTime

  """All values less than or equal the given value."""
  requestedPickupAt_lte: DateTime

  """All values greater than the given value."""
  requestedPickupAt_gt: DateTime

  """All values greater than or equal the given value."""
  requestedPickupAt_gte: DateTime
  ownerApprovedAt: DateTime

  """All values that are not equal to given value."""
  ownerApprovedAt_not: DateTime

  """All values that are contained in given list."""
  ownerApprovedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  ownerApprovedAt_not_in: [DateTime!]

  """All values less than the given value."""
  ownerApprovedAt_lt: DateTime

  """All values less than or equal the given value."""
  ownerApprovedAt_lte: DateTime

  """All values greater than the given value."""
  ownerApprovedAt_gt: DateTime

  """All values greater than or equal the given value."""
  ownerApprovedAt_gte: DateTime
  droppedOffAt: DateTime

  """All values that are not equal to given value."""
  droppedOffAt_not: DateTime

  """All values that are contained in given list."""
  droppedOffAt_in: [DateTime!]

  """All values that are not contained in given list."""
  droppedOffAt_not_in: [DateTime!]

  """All values less than the given value."""
  droppedOffAt_lt: DateTime

  """All values less than or equal the given value."""
  droppedOffAt_lte: DateTime

  """All values greater than the given value."""
  droppedOffAt_gt: DateTime

  """All values greater than or equal the given value."""
  droppedOffAt_gte: DateTime
  rentalPeriods_every: RentalPeriodWhereInput
  rentalPeriods_some: RentalPeriodWhereInput
  rentalPeriods_none: RentalPeriodWhereInput
}

input RentalWhereUniqueInput {
  id: ID
}

input RequestBookingInput {
  carId: ID!
  rentalDays: Int!
  startDate: DateTime!
  couponCode: String
  tnc: Boolean
  tos: Boolean
}

type RequestBookingPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rental: Rental
}

input StartBackgroundCheckInput {
  licenseNumber: String!
  licenseState: String!
  ssn: String!
  dob: DateTime!
  couponCode: String
}

type StartBackgroundCheckPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  backgroundCheck: BackgroundCheck
}

type StripeCharge {
  id: ID!
  captured: Boolean
}

type StripePaymentInformation {
  customerId: String
  id: ID!
  paymentAccount: PaymentAccount
  source: StripePaymentSource
}

input StripePaymentInformationWhereInput {
  """Logical AND on all given filters."""
  AND: [StripePaymentInformationWhereInput!]

  """Logical OR on all given filters."""
  OR: [StripePaymentInformationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StripePaymentInformationWhereInput!]
  customerId: ID

  """All values that are not equal to given value."""
  customerId_not: ID

  """All values that are contained in given list."""
  customerId_in: [ID!]

  """All values that are not contained in given list."""
  customerId_not_in: [ID!]

  """All values less than the given value."""
  customerId_lt: ID

  """All values less than or equal the given value."""
  customerId_lte: ID

  """All values greater than the given value."""
  customerId_gt: ID

  """All values greater than or equal the given value."""
  customerId_gte: ID

  """All values containing the given string."""
  customerId_contains: ID

  """All values not containing the given string."""
  customerId_not_contains: ID

  """All values starting with the given string."""
  customerId_starts_with: ID

  """All values not starting with the given string."""
  customerId_not_starts_with: ID

  """All values ending with the given string."""
  customerId_ends_with: ID

  """All values not ending with the given string."""
  customerId_not_ends_with: ID
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  paymentAccount: PaymentAccountWhereInput
}

type StripePaymentSource {
  id: ID!
  last4: String
  brand: String
  funding: String
}

type StripePayoutBank {
  id: ID!
  last4: String
  bankName: String
}

type StripePayoutInformation {
  id: ID!
  accountId: String
  paymentAccount: PayoutAccount
  bank: StripePayoutBank
}

input StripePayoutInformationWhereInput {
  """Logical AND on all given filters."""
  AND: [StripePayoutInformationWhereInput!]

  """Logical OR on all given filters."""
  OR: [StripePayoutInformationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StripePayoutInformationWhereInput!]
  accountId: ID

  """All values that are not equal to given value."""
  accountId_not: ID

  """All values that are contained in given list."""
  accountId_in: [ID!]

  """All values that are not contained in given list."""
  accountId_not_in: [ID!]

  """All values less than the given value."""
  accountId_lt: ID

  """All values less than or equal the given value."""
  accountId_lte: ID

  """All values greater than the given value."""
  accountId_gt: ID

  """All values greater than or equal the given value."""
  accountId_gte: ID

  """All values containing the given string."""
  accountId_contains: ID

  """All values not containing the given string."""
  accountId_not_contains: ID

  """All values starting with the given string."""
  accountId_starts_with: ID

  """All values not starting with the given string."""
  accountId_not_starts_with: ID

  """All values ending with the given string."""
  accountId_ends_with: ID

  """All values not ending with the given string."""
  accountId_not_ends_with: ID
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  payoutAccount: PayoutAccountWhereInput
}

enum TncAppStage {
  ON
  ASSIGNMENT_RECIEVED
  FARE_IN_VEHICLE
  OFF
}

type TncUsageDetails implements Node {
  accident(where: AccidentWhereInput): Accident
  notes(where: AdminNoteWhereInput, orderBy: AdminNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminNote!]
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  passengerIdentifications: String
  passengers: Int
  tncAppOnDuringIncident: Boolean
  tncStage: TncAppStage
}

input TncUsageDetailsWhereInput {
  """Logical AND on all given filters."""
  AND: [TncUsageDetailsWhereInput!]

  """Logical OR on all given filters."""
  OR: [TncUsageDetailsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TncUsageDetailsWhereInput!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  passengerIdentifications: String

  """All values that are not equal to given value."""
  passengerIdentifications_not: String

  """All values that are contained in given list."""
  passengerIdentifications_in: [String!]

  """All values that are not contained in given list."""
  passengerIdentifications_not_in: [String!]

  """All values less than the given value."""
  passengerIdentifications_lt: String

  """All values less than or equal the given value."""
  passengerIdentifications_lte: String

  """All values greater than the given value."""
  passengerIdentifications_gt: String

  """All values greater than or equal the given value."""
  passengerIdentifications_gte: String

  """All values containing the given string."""
  passengerIdentifications_contains: String

  """All values not containing the given string."""
  passengerIdentifications_not_contains: String

  """All values starting with the given string."""
  passengerIdentifications_starts_with: String

  """All values not starting with the given string."""
  passengerIdentifications_not_starts_with: String

  """All values ending with the given string."""
  passengerIdentifications_ends_with: String

  """All values not ending with the given string."""
  passengerIdentifications_not_ends_with: String
  passengers: Int

  """All values that are not equal to given value."""
  passengers_not: Int

  """All values that are contained in given list."""
  passengers_in: [Int!]

  """All values that are not contained in given list."""
  passengers_not_in: [Int!]

  """All values less than the given value."""
  passengers_lt: Int

  """All values less than or equal the given value."""
  passengers_lte: Int

  """All values greater than the given value."""
  passengers_gt: Int

  """All values greater than or equal the given value."""
  passengers_gte: Int
  tncAppOnDuringIncident: Boolean

  """All values that are not equal to given value."""
  tncAppOnDuringIncident_not: Boolean
  tncStage: TncAppStage

  """All values that are not equal to given value."""
  tncStage_not: TncAppStage

  """All values that are contained in given list."""
  tncStage_in: [TncAppStage!]

  """All values that are not contained in given list."""
  tncStage_not_in: [TncAppStage!]
  accident: AccidentWhereInput
  notes_every: AdminNoteWhereInput
  notes_some: AdminNoteWhereInput
  notes_none: AdminNoteWhereInput
}

input ToggleListingInput {
  carId: ID!
}

type ToggleListingPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  car: Car
}

input ToggleRentalExtensionInput {
  rentalId: ID!
}

type ToggleRentalExtensionPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  rental: Rental
}

input UpdateCarDetailsInput {
  carId: ID!
  city: String
  state: String
  street: String
  zip: String
  pickupLat: Float
  pickupLng: Float
  description: String
  vin: String
  makeId: String
  make: String
  modelId: String
  model: String
  yearId: String
  year: String
  mileage: Int
  maxDailyMiles: Int
  dailyPriceInCents: Int
  weeklyPriceInCents: Int
  monthlyPriceInCents: Int
  licensePlate: String
  registrationExpirationAt: DateTime
}

type UpdateCarPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  car: Car
}

input UpdatePaymentInfoInput {
  token: String!
}

type UpdatePaymentInfoPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  paymentAccount: PaymentAccount
}

input UpdatePayoutInfoInput {
  accountToken: String!
  bankToken: String!
}

type UpdatePayoutInfoPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  payoutAccount: PayoutAccount
}

input UpdateProfileInput {
  """owner"""
  photo: Upload

  """owner"""
  firstName: String

  """owner"""
  lastName: String

  """both"""
  phone: String

  """owner"""
  zip: String

  """owner"""
  address: String

  """both"""
  tncAccepted: Boolean

  """driver"""
  about: String

  """driver"""
  apt: String
  hNo: String

  """driver"""
  street: String

  """driver"""
  city: String

  """driver"""
  state: String
}

type UpdateProfilePayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  user: User
}

input UpdateProfilePhotoInput {
  file: Upload!
}

type UpdateProfilePhotoPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  file: File
  user: User
}

scalar Upload

input UploadCarDocumentInput {
  carId: ID!
  file: Upload!
  type: CarDocumentTypeEnum!
}

type UploadCarDocumentPayload implements MutationResponse {
  code: String
  success: Boolean
  message: String
  carDocument: CarDocument
}

type User {
  driver: Driver
  email: String
  firstName: String
  hyrecarTosAcceptedVersion: String
  hyrecarTosAcceptedAt: DateTime
  id: ID!
  legacyId: ID
  auth0Id: String
  createdAt: DateTime!
  updatedAt: DateTime!
  lastLoginAt: DateTime
  lastName: String
  location: UserLocation
  owner: Owner
  phone: String
  profilePhotoId: ID
  status: UserStatusEnum
  type: UserTypeEnum
  roles: [String]
  typeId: Int @deprecated
  photo: String @deprecated
  dob: DateTime @deprecated
  auth0Details: Auth0Details
  fullName: String
  requiresTosAcceptance: Boolean
  admin: Admin
  paymentAccounts(where: PaymentAccountWhereInput, orderBy: PaymentAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentAccount]!
  payoutAccounts(where: PayoutAccountWhereInput, orderBy: PayoutAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PayoutAccount]!
  depositOnFile: Deposit
  profilePhoto: File
}

type UserLocation {
  id: ID!
  user: User
  createdAt: DateTime!
  updatedAt: DateTime!
  formattedAddress: String
  street: String
  city: String
  state: String
  zip: String
  lat: Float
  lng: Float
  apt: String @deprecated
  address: String @deprecated
  verified: Int @deprecated
}

input UserLocationWhereInput {
  """Logical AND on all given filters."""
  AND: [UserLocationWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserLocationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserLocationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  formattedAddress: String

  """All values that are not equal to given value."""
  formattedAddress_not: String

  """All values that are contained in given list."""
  formattedAddress_in: [String!]

  """All values that are not contained in given list."""
  formattedAddress_not_in: [String!]

  """All values less than the given value."""
  formattedAddress_lt: String

  """All values less than or equal the given value."""
  formattedAddress_lte: String

  """All values greater than the given value."""
  formattedAddress_gt: String

  """All values greater than or equal the given value."""
  formattedAddress_gte: String

  """All values containing the given string."""
  formattedAddress_contains: String

  """All values not containing the given string."""
  formattedAddress_not_contains: String

  """All values starting with the given string."""
  formattedAddress_starts_with: String

  """All values not starting with the given string."""
  formattedAddress_not_starts_with: String

  """All values ending with the given string."""
  formattedAddress_ends_with: String

  """All values not ending with the given string."""
  formattedAddress_not_ends_with: String
  street: String

  """All values that are not equal to given value."""
  street_not: String

  """All values that are contained in given list."""
  street_in: [String!]

  """All values that are not contained in given list."""
  street_not_in: [String!]

  """All values less than the given value."""
  street_lt: String

  """All values less than or equal the given value."""
  street_lte: String

  """All values greater than the given value."""
  street_gt: String

  """All values greater than or equal the given value."""
  street_gte: String

  """All values containing the given string."""
  street_contains: String

  """All values not containing the given string."""
  street_not_contains: String

  """All values starting with the given string."""
  street_starts_with: String

  """All values not starting with the given string."""
  street_not_starts_with: String

  """All values ending with the given string."""
  street_ends_with: String

  """All values not ending with the given string."""
  street_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  state: String

  """All values that are not equal to given value."""
  state_not: String

  """All values that are contained in given list."""
  state_in: [String!]

  """All values that are not contained in given list."""
  state_not_in: [String!]

  """All values less than the given value."""
  state_lt: String

  """All values less than or equal the given value."""
  state_lte: String

  """All values greater than the given value."""
  state_gt: String

  """All values greater than or equal the given value."""
  state_gte: String

  """All values containing the given string."""
  state_contains: String

  """All values not containing the given string."""
  state_not_contains: String

  """All values starting with the given string."""
  state_starts_with: String

  """All values not starting with the given string."""
  state_not_starts_with: String

  """All values ending with the given string."""
  state_ends_with: String

  """All values not ending with the given string."""
  state_not_ends_with: String
  zip: String

  """All values that are not equal to given value."""
  zip_not: String

  """All values that are contained in given list."""
  zip_in: [String!]

  """All values that are not contained in given list."""
  zip_not_in: [String!]

  """All values less than the given value."""
  zip_lt: String

  """All values less than or equal the given value."""
  zip_lte: String

  """All values greater than the given value."""
  zip_gt: String

  """All values greater than or equal the given value."""
  zip_gte: String

  """All values containing the given string."""
  zip_contains: String

  """All values not containing the given string."""
  zip_not_contains: String

  """All values starting with the given string."""
  zip_starts_with: String

  """All values not starting with the given string."""
  zip_not_starts_with: String

  """All values ending with the given string."""
  zip_ends_with: String

  """All values not ending with the given string."""
  zip_not_ends_with: String
  lat: Float

  """All values that are not equal to given value."""
  lat_not: Float

  """All values that are contained in given list."""
  lat_in: [Float!]

  """All values that are not contained in given list."""
  lat_not_in: [Float!]

  """All values less than the given value."""
  lat_lt: Float

  """All values less than or equal the given value."""
  lat_lte: Float

  """All values greater than the given value."""
  lat_gt: Float

  """All values greater than or equal the given value."""
  lat_gte: Float
  lng: Float

  """All values that are not equal to given value."""
  lng_not: Float

  """All values that are contained in given list."""
  lng_in: [Float!]

  """All values that are not contained in given list."""
  lng_not_in: [Float!]

  """All values less than the given value."""
  lng_lt: Float

  """All values less than or equal the given value."""
  lng_lte: Float

  """All values greater than the given value."""
  lng_gt: Float

  """All values greater than or equal the given value."""
  lng_gte: Float
  user: UserWhereInput
}

enum UserStatusEnum {
  ACTIVE
  BLOCKED
}

enum UserTypeEnum {
  DRIVER
  OWNER
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  hyrecarTosAcceptedVersion: String

  """All values that are not equal to given value."""
  hyrecarTosAcceptedVersion_not: String

  """All values that are contained in given list."""
  hyrecarTosAcceptedVersion_in: [String!]

  """All values that are not contained in given list."""
  hyrecarTosAcceptedVersion_not_in: [String!]

  """All values less than the given value."""
  hyrecarTosAcceptedVersion_lt: String

  """All values less than or equal the given value."""
  hyrecarTosAcceptedVersion_lte: String

  """All values greater than the given value."""
  hyrecarTosAcceptedVersion_gt: String

  """All values greater than or equal the given value."""
  hyrecarTosAcceptedVersion_gte: String

  """All values containing the given string."""
  hyrecarTosAcceptedVersion_contains: String

  """All values not containing the given string."""
  hyrecarTosAcceptedVersion_not_contains: String

  """All values starting with the given string."""
  hyrecarTosAcceptedVersion_starts_with: String

  """All values not starting with the given string."""
  hyrecarTosAcceptedVersion_not_starts_with: String

  """All values ending with the given string."""
  hyrecarTosAcceptedVersion_ends_with: String

  """All values not ending with the given string."""
  hyrecarTosAcceptedVersion_not_ends_with: String
  hyrecarTosAcceptedAt: DateTime

  """All values that are not equal to given value."""
  hyrecarTosAcceptedAt_not: DateTime

  """All values that are contained in given list."""
  hyrecarTosAcceptedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  hyrecarTosAcceptedAt_not_in: [DateTime!]

  """All values less than the given value."""
  hyrecarTosAcceptedAt_lt: DateTime

  """All values less than or equal the given value."""
  hyrecarTosAcceptedAt_lte: DateTime

  """All values greater than the given value."""
  hyrecarTosAcceptedAt_gt: DateTime

  """All values greater than or equal the given value."""
  hyrecarTosAcceptedAt_gte: DateTime
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  legacyId: ID

  """All values that are not equal to given value."""
  legacyId_not: ID

  """All values that are contained in given list."""
  legacyId_in: [ID!]

  """All values that are not contained in given list."""
  legacyId_not_in: [ID!]

  """All values less than the given value."""
  legacyId_lt: ID

  """All values less than or equal the given value."""
  legacyId_lte: ID

  """All values greater than the given value."""
  legacyId_gt: ID

  """All values greater than or equal the given value."""
  legacyId_gte: ID

  """All values containing the given string."""
  legacyId_contains: ID

  """All values not containing the given string."""
  legacyId_not_contains: ID

  """All values starting with the given string."""
  legacyId_starts_with: ID

  """All values not starting with the given string."""
  legacyId_not_starts_with: ID

  """All values ending with the given string."""
  legacyId_ends_with: ID

  """All values not ending with the given string."""
  legacyId_not_ends_with: ID
  auth0Id: String

  """All values that are not equal to given value."""
  auth0Id_not: String

  """All values that are contained in given list."""
  auth0Id_in: [String!]

  """All values that are not contained in given list."""
  auth0Id_not_in: [String!]

  """All values less than the given value."""
  auth0Id_lt: String

  """All values less than or equal the given value."""
  auth0Id_lte: String

  """All values greater than the given value."""
  auth0Id_gt: String

  """All values greater than or equal the given value."""
  auth0Id_gte: String

  """All values containing the given string."""
  auth0Id_contains: String

  """All values not containing the given string."""
  auth0Id_not_contains: String

  """All values starting with the given string."""
  auth0Id_starts_with: String

  """All values not starting with the given string."""
  auth0Id_not_starts_with: String

  """All values ending with the given string."""
  auth0Id_ends_with: String

  """All values not ending with the given string."""
  auth0Id_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  lastLoginAt: DateTime

  """All values that are not equal to given value."""
  lastLoginAt_not: DateTime

  """All values that are contained in given list."""
  lastLoginAt_in: [DateTime!]

  """All values that are not contained in given list."""
  lastLoginAt_not_in: [DateTime!]

  """All values less than the given value."""
  lastLoginAt_lt: DateTime

  """All values less than or equal the given value."""
  lastLoginAt_lte: DateTime

  """All values greater than the given value."""
  lastLoginAt_gt: DateTime

  """All values greater than or equal the given value."""
  lastLoginAt_gte: DateTime
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  profilePhotoId: ID

  """All values that are not equal to given value."""
  profilePhotoId_not: ID

  """All values that are contained in given list."""
  profilePhotoId_in: [ID!]

  """All values that are not contained in given list."""
  profilePhotoId_not_in: [ID!]

  """All values less than the given value."""
  profilePhotoId_lt: ID

  """All values less than or equal the given value."""
  profilePhotoId_lte: ID

  """All values greater than the given value."""
  profilePhotoId_gt: ID

  """All values greater than or equal the given value."""
  profilePhotoId_gte: ID

  """All values containing the given string."""
  profilePhotoId_contains: ID

  """All values not containing the given string."""
  profilePhotoId_not_contains: ID

  """All values starting with the given string."""
  profilePhotoId_starts_with: ID

  """All values not starting with the given string."""
  profilePhotoId_not_starts_with: ID

  """All values ending with the given string."""
  profilePhotoId_ends_with: ID

  """All values not ending with the given string."""
  profilePhotoId_not_ends_with: ID
  status: UserStatusEnum

  """All values that are not equal to given value."""
  status_not: UserStatusEnum

  """All values that are contained in given list."""
  status_in: [UserStatusEnum!]

  """All values that are not contained in given list."""
  status_not_in: [UserStatusEnum!]
  type: UserTypeEnum

  """All values that are not equal to given value."""
  type_not: UserTypeEnum

  """All values that are contained in given list."""
  type_in: [UserTypeEnum!]

  """All values that are not contained in given list."""
  type_not_in: [UserTypeEnum!]
  driver: DriverWhereInput
  location: UserLocationWhereInput
  owner: OwnerWhereInput
}

type ValidateVin implements MutationResponse {
  code: String
  success: Boolean
  message: String
}

type Viewer {
  id: ID
  me: User
  admin: Admin
  cars(where: CarWhereInput, orderBy: CarOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CarConnection!
  rentals(filter: RentalWhereInput, orderBy: RentalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalConnection!
}
